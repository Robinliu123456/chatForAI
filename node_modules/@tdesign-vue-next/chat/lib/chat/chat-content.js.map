{"version":3,"file":"chat-content.js","sources":["../../src/chat/chat-content.tsx"],"sourcesContent":["import { defineComponent, computed, onMounted, inject } from 'vue';\nimport Clipboard from 'clipboard';\nimport hljs from 'highlight.js';\nimport { Marked } from 'marked';\nimport { markedHighlight } from 'marked-highlight';\nimport props from './props';\nimport { usePrefixClass } from '../hooks/useConfig';\n\n// import 'mathjax/es5/tex-mml-chtml';\n\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\ntype Iescape = {\n  [key in '&<>\"\\'']: string;\n};\nconst escapeReplacements: Iescape = {\n  // @ts-ignore\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch: string): string => escapeReplacements[ch as keyof Iescape];\n\nfunction escape(html: string, encode: Boolean = false) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else if (escapeTestNoEncode.test(html)) {\n    return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n  }\n\n  return html;\n}\n\nconst marked = new Marked(\n  markedHighlight({\n    highlight(code) {\n      return hljs.highlightAuto(code).value;\n    },\n  }),\n  {\n    renderer: {\n      code(code, lang, escaped) {\n        return `<pre class=\"hljs\"><div class=\"t-chat__code-header\">\n        <span class=\"t-chat__language-txt\">${escape(lang) || ''}</span>\n        <div class=\"t-chat__copy-btn\" data-clipboard-action=\"copy\">复制代码</div>\n        </div><code class=\"hljs language-${escape(lang)}\" >${escaped ? code : escape(code)}</code></pre>`;\n      },\n    },\n  },\n);\n\nexport default defineComponent({\n  name: 'TChatContent',\n  components: {},\n  props,\n  setup(props) {\n    const COMPONENT_NAME = usePrefixClass('chat');\n    // role 没被注入的时候，使用props.role来自chat-item传入，content在插槽里的inject，修复role数据混乱问题\n    const role = computed(() => props.role || inject('role', props.role));\n    onMounted(() => {\n      // renderMathJax();\n      const clipboard = new Clipboard('.t-chat__copy-btn', {\n        target: (trigger: HTMLDivElement) => (trigger.parentNode as HTMLElement).nextElementSibling,\n      });\n\n      clipboard.on('success', (e) => {\n        e.trigger.textContent = '已复制';\n        setTimeout(() => {\n          e.trigger.textContent = '复制代码';\n        }, 2000);\n        e.clearSelection();\n      });\n    });\n    // const renderMathJax = () => {\n    //   if (window.MathJax) {\n    //     window.MathJax.typeset();\n    //   }\n    // };\n    const getHtmlByMarked = (markdown: string) => {\n      if (!markdown) {\n        return '<div class=\"waiting\"></div>';\n      }\n      return marked.parse(markdown);\n    };\n    const textInfo = computed(() => {\n      if (role.value === 'user') {\n        return escape(props.content || '');\n      }\n      return getHtmlByMarked(props.content);\n    });\n    return () => (\n      <div class={[`${COMPONENT_NAME.value}__text`]}>\n        {role.value === 'user' ? (\n          <div class={`${COMPONENT_NAME.value}__text__user`}>\n            <pre v-html={textInfo.value}></pre>\n          </div>\n        ) : (\n          <div class={`${COMPONENT_NAME.value}__text__assistant`}>\n            <div\n              class={[`${COMPONENT_NAME.value}__text__content`, `${COMPONENT_NAME.value}__text--${role.value}`]}\n              v-html={textInfo.value}\n            ></div>\n          </div>\n        )}\n      </div>\n    );\n  },\n});\n"],"names":["escapeTest","escapeReplace","RegExp","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","arguments","length","undefined","test","replace","marked","Marked","markedHighlight","highlight","code","hljs","highlightAuto","value","renderer","lang","escaped","concat","defineComponent","name","components","props","setup","COMPONENT_NAME","usePrefixClass","role","computed","inject","onMounted","clipboard","Clipboard","target","trigger","parentNode","nextElementSibling","on","e","textContent","setTimeout","clearSelection","getHtmlByMarked","markdown","parse","textInfo","content","_createVNode"],"mappings":"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"}