{"version":3,"file":"type.mjs","sources":["../../src/chat/type.ts"],"sourcesContent":["/* eslint-disable */\n\nimport exp from 'constants';\nimport { TNode } from '../common';\n\nexport interface TdChatItemProps {\n  /**\n   * 操作\n   */\n  actions?: Array<TNode>;\n  /**\n   * 作者\n   */\n  name?: string | TNode;\n  /**\n   * 头像\n   */\n  avatar?: string  | TNode;\n  /**\n   * 内容\n   */\n  content?: string;\n  /**\n   * 时间\n   */\n  datetime?: string | TNode;\n  /**\n   * 消息类型\n   */\n  role?: ModelRoleEnum;\n  /**\n   * 流式消息加载中\n   */\n  textLoading?: boolean;\n  /**\n   * 消息样式， 是否有边框，背景色等\n   */\n  variant?: Variant;\n  /**\n   * 是否为动画\n   */\n  movable?: Boolean;\n  /**\n   * 加载动画\n   */\n  animation?: string;\n  // 消息索引\n  itemIndex?: Number;\n};\nexport interface TdChatProps {\n  /**\n   * 布局\n   */\n  layout?: Layout;\n  /**\n   * 倒序渲染\n   */\n  reverse?: boolean;\n    /**\n   * 数据\n   */\n  data?: Array<TdChatItemProps>;\n  /**\n   * 接口请求中\n   */\n  textLoading?: boolean;\n  /** 清空历史按钮，值为 true 显示默认操作按钮，值为 false 不显示任何内容，值类型为 Function 表示自定义 */\n  clearHistory?: boolean | TNode;\n  /** 点赞差评复制重新生成按钮集合，值为true显示默认操作按钮 */\n  actions?: boolean | TNode;\n  // 流式数据加载中\n  isStreamLoad?: boolean;\n  onClear?: (context: { e: MouseEvent }) => void;\n}\nexport interface TdChatListProps {\n  /**\n   * 数据\n   */\n  data?: Array<TdChatItemProps>;\n  /**\n   * 流式消息加载中\n   */\n  textLoading?: boolean;\n  onScroll?: (e: Event) => void;\n};\nexport interface TdChatContentProps {\n  content?: string;\n  role?: string;\n  isNormalText?: boolean;\n  textLoading: boolean;\n}\nexport interface TdChatActionsProps {\n  isGood?: Boolean;\n  isBad?: Boolean;\n  content?: string;\n  disabled?: boolean;\n    /**\n   * 点击时触发\n   */\n  onOperation?: (value:string, context: { e: MouseEvent, index?: number, item?: TdChatItemProps }) => void;\n}\nexport interface TdChatInputProps {\n  placeholder?: string;\n  disabled?: boolean;\n  value: string | number;\n  modelValue: string | number;\n  defaultValue: string | number;\n    /**\n   * 高度自动撑开。 autosize = true 表示组件高度自动撑开，同时，依旧允许手动拖高度。如果设置了 autosize.maxRows 或者 autosize.minRows 则不允许手动调整高度\n   * @default false\n   */\n  autosize?: boolean | { minRows?: number; maxRows?: number };\n  onSend?: \t(value:string, context: { e: MouseEvent | KeyboardEvent }) => void;\n  onStop?: \t(value:string, context: { e: MouseEvent }) => void;\n  onChange?: (value:string, context: { e: InputEvent | MouseEvent | KeyboardEvent }) => void;\n  onBlur?: (value:string, context: { e: FocusEvent }) => void;\n  onFocus?: (value:string, context: { e: FocusEvent }) => void;\n}\nexport interface MetaData {\n  /**\n   * 角色头像\n   * @description 可选参数，如果不传则使用默认头像\n   */\n  avatar?: string;\n  /**\n   * 名称\n   * @description 可选参数，如果不传则使用默认名称\n   */\n  name?: string;\n  /**\n   * 附加数据\n   * @description 可选参数，如果不传则使用默认名称\n   */\n  [key: string]: any;\n}\nexport interface TdChatItemMeta {\n  avatar?: string;\n  name?: string;\n  role?: string;\n  datetime?: string;\n}\nexport type ModelRoleEnum = 'assistant' | 'user' | 'error' | 'model-change' | 'system';\n\nexport type Variant = 'text'| 'base' | 'outline'\nexport type Layout = 'single' | 'both'\nexport interface FetchSSEOptions {\n  success?: (res: SSEEvent) => void; // 流式数据解析成功回调\n  fail?: () => void; // 流式请求失败回调\n  complete?: (isOk: Boolean, msg?: String, requestid?: String) => void; // 流式请求完成回调\n}\nexport interface SSEEvent {\n  type: string | null;\n  data: string | null;\n}\nexport interface BackBottomParams {\n  behavior?: 'auto' | 'smooth';\n}"],"names":[],"mappings":";;;;;;AAgDC,CAAA;AAoCA"}