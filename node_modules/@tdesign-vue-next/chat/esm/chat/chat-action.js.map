{"version":3,"file":"chat-action.js","sources":["../../src/chat/chat-action.tsx"],"sourcesContent":["import { defineComponent, inject } from 'vue';\nimport props from './props';\n\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport { Skeleton as TSkeleton, Button as TButton, Space as TSpace, Icon as TIcon } from 'tdesign-vue-next';\nimport { ThumbUpIcon, ThumbDownIcon, RefreshIcon, CopyIcon } from 'tdesign-icons-vue-next';\nimport Clipboard from 'clipboard';\nimport { MessagePluginSingleton } from './util';\n\nexport default defineComponent({\n  name: 'TChatAction',\n  components: {\n    TSkeleton,\n    TButton,\n    TIcon,\n    TSpace,\n  },\n  props: {\n    isGood: props.isGood,\n    isBad: props.isBad,\n    content: props.content,\n    disabled: props.disabled,\n    operationBtn: props.operationBtn,\n    onOperation: props.onOperation,\n  },\n  emits: ['operation'],\n  setup(props, { emit }) {\n    const COMPONENT_NAME = usePrefixClass('chat');\n    const renderTNodeJSX = useTNodeJSX();\n    const messagePluginInstance = MessagePluginSingleton.getInstance();\n    return () => {\n      // textLoading更新后要传给子组件和孙组件\n      const content = renderTNodeJSX('content');\n      // 内置操作按钮，assistantActions和插槽判断 t-chat注入的属性获取不到默认为false\n      const disabled = props.disabled;\n      const copyAnswer = () => {\n        // 根据e获取当前按钮选择器\n        const copyBtn = new Clipboard(`.copy-btn`);\n        copyBtn.on('success', () => {\n          messagePluginInstance.showSuccess();\n        });\n        copyBtn.on('error', () => {\n          messagePluginInstance.showError();\n        });\n      };\n      const handleClick = (e: MouseEvent, type: string) => {\n        if (type === 'copy') {\n          copyAnswer();\n        }\n        // 如果通过default传入的chat-item 组件，如何获取index值todo\n        emit('operation', type, {\n          e,\n        });\n      };\n      const replayButton = props.operationBtn.includes('replay') ? (\n        <t-space>\n          <div class={`${COMPONENT_NAME.value}__refresh`}>\n            <t-tooltip content=\"重新生成\">\n              <t-button\n                theme=\"default\"\n                size=\"small\"\n                disabled={disabled}\n                onClick={(e: MouseEvent) => handleClick(e, 'replay')}\n              >\n                <RefreshIcon />\n              </t-button>\n            </t-tooltip>\n            <span class={`${COMPONENT_NAME.value}__refresh-line`}></span>\n          </div>\n        </t-space>\n      ) : null;\n      const copyButton = props.operationBtn.includes('copy') ? (\n        <t-space>\n          <t-tooltip content=\"复制\">\n            <t-button\n              theme=\"default\"\n              size=\"small\"\n              class=\"copy-btn\"\n              disabled={disabled}\n              onClick={(e: MouseEvent) => handleClick(e, 'copy')}\n              data-clipboard-text={content}\n            >\n              <CopyIcon />\n            </t-button>\n          </t-tooltip>\n        </t-space>\n      ) : null;\n      const goodButton = props.operationBtn.includes('good') ? (\n        <t-space>\n          <t-tooltip content=\"点赞\">\n            <t-button\n              theme=\"default\"\n              size=\"small\"\n              class={props.isGood && `${COMPONENT_NAME.value}-button--active`}\n              disabled={disabled}\n              onClick={(e: MouseEvent) => handleClick(e, 'good')}\n            >\n              <ThumbUpIcon />\n            </t-button>\n          </t-tooltip>\n        </t-space>\n      ) : null;\n      const badButton = props.operationBtn.includes('bad') ? (\n        <t-space>\n          <t-tooltip content=\"点踩\">\n            <t-button\n              theme=\"default\"\n              size=\"small\"\n              class={props.isBad && `${COMPONENT_NAME.value}-button--active`}\n              disabled={disabled}\n              onClick={(e: MouseEvent) => handleClick(e, 'bad')}\n            >\n              <ThumbDownIcon />\n            </t-button>\n          </t-tooltip>\n        </t-space>\n      ) : null;\n      // 按钮组件的映射\n      const buttonComponents = {\n        replay: replayButton,\n        copy: copyButton,\n        good: goodButton,\n        bad: badButton,\n      };\n      return (\n        <div class={`${COMPONENT_NAME.value}__actions`}>\n          {props.operationBtn.map((btnKey) => {\n            return buttonComponents[btnKey];\n          })}\n        </div>\n      );\n    };\n  },\n});\n"],"names":["defineComponent","name","components","TSkeleton","TButton","TIcon","TSpace","props","isGood","isBad","content","disabled","operationBtn","onOperation","emits","setup","emit","_ref","COMPONENT_NAME","usePrefixClass","renderTNodeJSX","useTNodeJSX","messagePluginInstance","MessagePluginSingleton","getInstance","copyAnswer","copyBtn","Clipboard","on","showSuccess","showError","handleClick","e","type","replayButton","includes","_createVNode","_resolveComponent","_default","concat","value","onClick","RefreshIcon","copyButton","CopyIcon","goodButton","ThumbUpIcon","badButton","ThumbDownIcon","buttonComponents","replay","copy","good","bad","map","btnKey"],"mappings":"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"}