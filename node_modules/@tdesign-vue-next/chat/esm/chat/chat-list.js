/**
 * tdesign-vue-chat v0.1.4
 * (c) 2024 tdesign
 * @license MIT
 */

import { defineComponent, createVNode } from 'vue';
import props from './props.js';
import { useTNodeJSX } from '../hooks/tnode.js';
import ChatItem from './chat-item.js';
import 'lodash/isFunction';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../utils/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isString';
import 'lodash/isObject';
import '../hooks/useConfig.js';
import '../config-provider/useConfig.js';
import 'lodash/cloneDeep';
import '../config-provider/context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../_common/js/global-config/default-config.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_chunks/dep-b3580d5c.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-629c2463.js';
import '../_chunks/dep-ef1f7cbb.js';
import '../_chunks/dep-5974ece7.js';
import 'lodash/isArray';
import './chat-content.js';
import 'clipboard';
import 'highlight.js';
import 'marked';
import 'marked-highlight';
import 'tdesign-vue-next';
import './chat-loading.js';

var chatList = defineComponent({
  name: "TChatList",
  props: props,
  setup: function setup(props2) {
    var renderTNodeJSX = useTNodeJSX();
    return function () {
      var data = renderTNodeJSX("data") || props2.data;
      var textLoading = renderTNodeJSX("textLoading") || props2.textLoading;
      return createVNode("template", null, [data && data.map(function (item, index) {
        return createVNode(ChatItem, {
          "avatar": item.avatar,
          "name": item.name,
          "role": item.role,
          "datetime": item.datetime,
          "content": item.content,
          "text-loading": index === 0 && textLoading
        }, null);
      })]);
    };
  }
});

export { chatList as default };
//# sourceMappingURL=chat-list.js.map
