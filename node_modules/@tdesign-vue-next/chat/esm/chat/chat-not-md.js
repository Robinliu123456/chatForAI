/**
 * tdesign-vue-chat v0.1.4
 * (c) 2024 tdesign
 * @license MIT
 */

import { defineComponent, computed, createVNode, resolveComponent } from 'vue';
import props from './props.js';

var escapeReplacements = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
var getEscapeReplacement = function getEscapeReplacement(ch) {
  return escapeReplacements[ch];
};
function escape(html) {
  var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var escapeTest = encode ? /[&<>"']/ : /[<>"']|&(?!#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);/;
  return html.replace(escapeTest, getEscapeReplacement);
}
var chatNotMd = defineComponent({
  name: "TChatContent",
  props: props,
  setup: function setup(props2) {
    var textInfo = computed(function () {
      return escape(props2.content || "");
    });
    return function () {
      return createVNode("div", null, [props2.role === "user" ? createVNode("div", {
        "class": "user"
      }, [createVNode("pre", null, [textInfo.value])]) : createVNode("div", {
        "class": "assistant"
      }, [createVNode("div", {
        "class": ["content", props2.role],
        "innerHTML": textInfo.value
      }, null)]), props2.role === "assistant" && props2.textLoading && createVNode(resolveComponent("t-loading"), {
        "class": "text-loading",
        "size": "120px",
        "loading": props2.textLoading
      }, null)]);
    };
  }
});

export { chatNotMd as default };
//# sourceMappingURL=chat-not-md.js.map
