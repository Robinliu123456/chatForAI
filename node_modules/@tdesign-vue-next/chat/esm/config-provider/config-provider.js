/**
 * tdesign-vue-chat v0.1.4
 * (c) 2024 tdesign
 * @license MIT
 */

import { defineComponent, createVNode, Fragment } from 'vue';
import { useTNodeJSX } from '../hooks/tnode.js';
import { provideConfig } from './useConfig.js';
import 'lodash/isFunction';
import 'lodash/camelCase';
import 'lodash/kebabCase';
import '../utils/render-tnode.js';
import 'lodash/isEmpty';
import 'lodash/isString';
import 'lodash/isObject';
import 'lodash/cloneDeep';
import './context.js';
import 'lodash/mergeWith';
import 'lodash/merge';
import '../_common/js/global-config/default-config.js';
import '../_common/js/global-config/locale/zh_CN.js';
import '../_chunks/dep-b3580d5c.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-629c2463.js';
import '../_chunks/dep-ef1f7cbb.js';
import '../_chunks/dep-5974ece7.js';
import 'lodash/isArray';

var configProviderProps = {
  globalConfig: Object
};
var _ConfigProvider = defineComponent({
  name: "TConfigProvider",
  props: configProviderProps,
  setup: function setup(props) {
    provideConfig(props);
    var renderTNodeJSX = useTNodeJSX();
    return function () {
      return createVNode(Fragment, null, [renderTNodeJSX("default")]);
    };
  }
});

export { configProviderProps, _ConfigProvider as default };
//# sourceMappingURL=config-provider.js.map
