{"version":3,"file":"chat.js","sources":["../../src/chat/chat.tsx"],"sourcesContent":["import { defineComponent, computed, provide, ref } from 'vue';\nimport props from './props';\nimport { usePrefixClass } from '../hooks/useConfig';\nimport { useTNodeJSX } from '../hooks/tnode';\nimport ChatItem from './chat-item';\nimport isArray from 'lodash/isArray';\nimport { TdChatItemProps, BackBottomParams } from './type';\nimport { Divider as TDivider, Popconfirm as TPopconfirm, Icon as TIcon } from 'tdesign-vue-next';\n\nconst handleScrollToBottom = (target: HTMLDivElement, behavior?: 'auto' | 'smooth') => {\n  const currentScrollHeight = target.scrollHeight;\n  const currentClientHeight = target.clientHeight;\n\n  const innerBehavior = behavior ?? 'auto';\n  if (innerBehavior === 'auto') {\n    target.scrollTop = currentScrollHeight - currentClientHeight;\n  } else {\n    const startScrollTop = target.scrollTop;\n    const endScrollTop = currentScrollHeight - currentClientHeight;\n    const duration = 300;\n    const step = (endScrollTop - startScrollTop) / duration;\n    let startTime: number | undefined;\n    // 平滑地修改scrollTop值\n    const animateScroll = (time: number) => {\n      if (!startTime) {\n        startTime = time;\n      }\n      const elapsed = time - startTime;\n      const top = Math.min(endScrollTop, startScrollTop + elapsed * step);\n      target.scrollTop = top;\n      if (top < endScrollTop) {\n        requestAnimationFrame(animateScroll);\n      }\n    };\n\n    requestAnimationFrame(animateScroll);\n  }\n};\n\nexport default defineComponent({\n  name: 'TChat',\n  components: {\n    TDivider,\n    TPopconfirm,\n    TIcon,\n    ChatItem,\n  },\n  props: {\n    data: props.data,\n    layout: props.layout,\n    clearHistory: props.clearHistory,\n    reverse: props.reverse,\n    isStreamLoad: props.isStreamLoad,\n    textLoading: props.textLoading,\n    onClear: props.onClear,\n    onScroll: props.onScroll,\n  },\n  emits: ['clear', 'scroll'],\n  setup(props, { slots, emit, expose }) {\n    const COMPONENT_NAME = usePrefixClass('chat');\n    const renderTNodeJSX = useTNodeJSX();\n    provide('textLoading', props.textLoading);\n    provide('reverse', props.reverse);\n    const classes = computed(() => {\n      return [\n        COMPONENT_NAME.value,\n        {\n          [`${COMPONENT_NAME.value}--normal`]: props.layout === 'both',\n        },\n      ];\n    });\n    // 默认反转布局\n    const listClasses = computed(() => {\n      return [\n        `${COMPONENT_NAME.value}__list`,\n        {\n          [`${COMPONENT_NAME.value}__list--reverse`]: props.reverse,\n        },\n      ];\n    });\n    const renderBody = () => {\n      /**\n       * 1. 两种方式获取要渲染的 list\n       *  a. props 传 data\n       *  b. slots t-chat-item\n       * a 优先级更高\n       */\n      const data = renderTNodeJSX('data') || props.data;\n      if (isArray(data) && data.length > 0) {\n        const isLoading = (index: number) => {\n          return (props.reverse ? index === 0 : index === data.length - 1) && props.textLoading;\n        };\n        return data.map((item: TdChatItemProps, index: number) => (\n          <ChatItem\n            avatar={item.avatar}\n            name={item.name}\n            role={item.role}\n            datetime={item.datetime}\n            content={item.content}\n            text-loading={isLoading(index)}\n            itemIndex={index}\n          />\n        ));\n      } else {\n        return renderTNodeJSX('default');\n      }\n    };\n    const clearConfirm = (context: { e: MouseEvent }) => {\n      emit('clear', context);\n    };\n    const defaultClearHistory = (\n      <TPopconfirm content=\"确定要清空所有的消息吗？\" onConfirm={clearConfirm}>\n        <TDivider class=\"clear-btn\">\n          <TIcon name=\"clear\" size=\"14px\" />\n          <span class=\"clear-btn-text\">清空历史记录</span>\n        </TDivider>\n      </TPopconfirm>\n    );\n    const showFooter = computed(() => renderTNodeJSX('footer'));\n    const chatBoxRef = ref<HTMLDivElement>();\n    // 滚动到底部\n    const scrollToBottom = (data: BackBottomParams) => {\n      if (!chatBoxRef.value) return;\n      const { behavior = 'auto' } = data;\n      handleScrollToBottom(chatBoxRef.value, behavior);\n    };\n    const handleScroll = (e: Event) => {\n      emit('scroll', {\n        e,\n      });\n    };\n    expose({\n      scrollToBottom,\n    });\n    // clearHistory为true时，清空历史记录显示\n    // return里的props是响应式\n    // 倒序渲染不影响清空历史的位置\n    return () => (\n      <div class={classes.value}>\n        <div class={listClasses.value} ref={chatBoxRef} onScroll={handleScroll}>\n          {props.reverse && <div className=\"place-holder\"></div>}\n          {props.reverse && props.clearHistory && renderTNodeJSX('clearHistory', defaultClearHistory)}\n          {renderBody()}\n          {!props.reverse && props.clearHistory && renderTNodeJSX('clearHistory', defaultClearHistory)}\n        </div>\n        {showFooter.value && <div class={`${COMPONENT_NAME.value}__footer`}>{showFooter.value}</div>}\n      </div>\n    );\n  },\n});\n"],"names":["handleScrollToBottom","target","behavior","currentScrollHeight","scrollHeight","currentClientHeight","clientHeight","innerBehavior","scrollTop","startScrollTop","endScrollTop","duration","step","startTime","animateScroll","time","elapsed","top","Math","min","requestAnimationFrame","defineComponent","name","components","TDivider","TPopconfirm","TIcon","ChatItem","props","data","layout","clearHistory","reverse","isStreamLoad","textLoading","onClear","onScroll","emits","setup","_ref","slots","emit","expose","COMPONENT_NAME","usePrefixClass","renderTNodeJSX","useTNodeJSX","provide","classes","computed","value","_defineProperty","concat","listClasses","renderBody","isArray","length","isLoading","index","map","item","_createVNode","avatar","role","datetime","content","clearConfirm","context","defaultClearHistory","_default","showFooter","chatBoxRef","ref","scrollToBottom","_data$behavior","handleScroll","e"],"mappings":"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"}