/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, ref, watch, createVNode, mergeProps } from 'vue';
import { Input } from '../input/index.js';
import { Color } from './utils/index.js';
import { useBaseClassName } from './hooks/index.js';
import { useCommonClassName } from '../hooks/useConfig.js';
import '../input/input.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import 'tdesign-icons-vue-next';
import '../input/props.js';
import '../hooks/useDisabled.js';
import 'lodash-es';
import '../hooks/useReadonly.js';
import '../hooks/useGlobalIcon.js';
import '../config-provider/useConfig.js';
import '../config-provider/context.js';
import '../_chunks/dep-29ab0aa0.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-fad4e87b.js';
import 'dayjs';
import '../_chunks/dep-81c9c3a2.js';
import '../config-provider/type.js';
import '../hooks/tnode.js';
import '../utils/render-tnode.js';
import '../input/useInput.js';
import '@babel/runtime/helpers/slicedToArray';
import '../form/const.js';
import '../hooks/index.js';
import '../hooks/icon.js';
import '../hooks/slot.js';
import '../hooks/useCommonClassName.js';
import '../hooks/useDefaultValue.js';
import '../hooks/useDestroyOnClose.js';
import '../hooks/useKeepAnimation.js';
import '../hooks/useRipple.js';
import '../_chunks/dep-7b6ca170.js';
import '../hooks/useVirtualScroll.js';
import '../hooks/useVModel.js';
import '../hooks/useImagePreviewUrl.js';
import '../_chunks/dep-5bb2887d.js';
import '../_chunks/dep-164cb331.js';
import '../input/useLengthLimit.js';
import '../_chunks/dep-b9aef095.js';
import '../_chunks/dep-4605ddf4.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../input/useInputEventHandler.js';
import '../input/useInputWidth.js';
import '../hooks/useResizeObserver.js';
import '../input/input-group.js';
import '../input/input-group-props.js';
import '../utils/withInstall.js';
import '../input/style';
import '../input/type.js';
import '@babel/runtime/helpers/classCallCheck';
import '@babel/runtime/helpers/createClass';
import 'tinycolor2';

var DefaultTrigger = defineComponent({
  name: "DefaultTrigger",
  inheritAttrs: false,
  props: {
    color: {
      type: String,
      "default": ""
    },
    disabled: {
      type: Boolean,
      "default": false
    },
    borderless: {
      type: Boolean,
      "default": false
    },
    clearable: {
      type: Boolean,
      "default": false
    },
    inputProps: {
      type: Object,
      "default": function _default() {
        return {
          autoWidth: true
        };
      }
    },
    onTriggerChange: {
      type: Function,
      "default": function _default() {
        return function () {};
      }
    },
    size: {
      type: String,
      "default": "medium"
    }
  },
  setup: function setup(props) {
    var baseClassName = useBaseClassName();
    var value = ref(props.color);
    var _useCommonClassName = useCommonClassName(),
      sizeClassNames = _useCommonClassName.SIZE;
    watch(function () {
      return [props.color];
    }, function () {
      return value.value = props.color;
    });
    var handleChange = function handleChange(input) {
      if (input === props.color) {
        return;
      }
      if (input && !Color.isValid(input)) {
        value.value = props.color;
      } else {
        value.value = input;
      }
      props.onTriggerChange(value.value);
    };
    return {
      baseClassName: baseClassName,
      value: value,
      handleChange: handleChange,
      sizeClassNames: sizeClassNames
    };
  },
  render: function render() {
    var _this = this;
    var baseClassName = this.baseClassName,
      sizeClassNames = this.sizeClassNames;
    var inputSlots = {
      label: function label() {
        return createVNode("div", {
          "class": ["".concat(baseClassName, "__trigger--default__color"), "".concat(baseClassName, "--bg-alpha")]
        }, [createVNode("span", {
          "class": ["color-inner", _defineProperty({}, sizeClassNames[_this.size], _this.size !== "medium")],
          "style": {
            background: _this.value
          }
        }, null)]);
      }
    };
    return createVNode(Input, mergeProps({
      "borderless": this.borderless,
      "clearable": this.clearable,
      "size": this.size,
      "modelValue": _this.value,
      "onUpdate:modelValue": function onUpdateModelValue($event) {
        return _this.value = $event;
      },
      "disabled": this.disabled,
      "onBlur": this.handleChange
    }, this.inputProps), inputSlots);
  }
});

export { DefaultTrigger as default };
//# sourceMappingURL=trigger.js.map
