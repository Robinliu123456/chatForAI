/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { createVNode } from 'vue';
import '../adapt.js';
import { getTNode } from '../util.js';
import { usePrefixClass } from '../../hooks/useConfig.js';
import { useGlobalIcon } from '../../hooks/useGlobalIcon.js';
import { CaretRightSmallIcon } from 'tdesign-icons-vue-next';
import { Loading } from '../../loading/index.js';
import '../../utils/withInstall.js';
import '../../hooks/useVModel.js';
import 'lodash-es';
import '../../hooks/useDefaultValue.js';
import '../../checkbox/index.js';
import '../../checkbox/checkbox.js';
import '@babel/runtime/helpers/slicedToArray';
import '@babel/runtime/helpers/defineProperty';
import '../../checkbox/props.js';
import '../../hooks/useRipple.js';
import '../../hooks/useKeepAnimation.js';
import '../../config-provider/context.js';
import '../../_chunks/dep-29ab0aa0.js';
import '@babel/runtime/helpers/typeof';
import '../../_chunks/dep-fad4e87b.js';
import 'dayjs';
import '../../_chunks/dep-81c9c3a2.js';
import '../../config-provider/useConfig.js';
import '../../config-provider/type.js';
import '../../_chunks/dep-7b6ca170.js';
import '../../hooks/tnode.js';
import '../../utils/render-tnode.js';
import '../../checkbox/consts/index.js';
import '../../checkbox/hooks/useCheckboxLazyLoad.js';
import '../../_chunks/dep-9bd4fc40.js';
import '../../checkbox/hooks/useKeyboardEvent.js';
import '../../_chunks/dep-ae2e35f4.js';
import '../../hooks/useDisabled.js';
import '../../hooks/useReadonly.js';
import '../../checkbox/group.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../../checkbox/checkbox-group-props.js';
import '../../hooks/slot.js';
import '../../checkbox/style';
import '../../checkbox/type.js';
import '../../hooks/useLazyLoad.js';
import '../../utils/dom.js';
import '../../hooks/useVirtualScrollNew.js';
import '../../hooks/useResizeObserver.js';
import '../../_chunks/dep-2b11775f.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/helpers/classCallCheck';
import '@babel/runtime/helpers/createClass';
import '@babel/runtime/regenerator';
import '../../_chunks/dep-164cb331.js';
import '../../_chunks/dep-b9aef095.js';
import '../../loading/directive.js';
import '../../loading/plugin.js';
import '../../_chunks/dep-89a96062.js';
import '../../loading/icon/gradient.js';
import '../../_chunks/dep-4605ddf4.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../../loading/props.js';
import '../../hooks/useTeleport.js';
import '../../loading/style';
import '../../loading/type.js';

function useRenderIcon(state) {
  var classPrefix = usePrefixClass().value;
  var componentName = usePrefixClass("tree").value;
  var getFolderIcon = function getFolderIcon(h) {
    var _useGlobalIcon = useGlobalIcon({
        CaretRightSmallIcon: CaretRightSmallIcon
      }),
      CaretRightSmallIcon$1 = _useGlobalIcon.CaretRightSmallIcon;
    return createVNode(CaretRightSmallIcon$1, null, null);
  };
  var handleMousedown = function handleMousedown(evt) {
    evt.preventDefault();
  };
  var renderIcon = function renderIcon(h) {
    var node = state.node,
      treeScope = state.treeScope;
    var scopedSlots = treeScope.scopedSlots;
    var treeProps = (treeScope === null || treeScope === void 0 ? void 0 : treeScope.treeProps) || {};
    var icon = treeProps.icon;
    var isDefaultIcon = false;
    var iconNode = null;
    if (icon === true) {
      if (scopedSlots !== null && scopedSlots !== void 0 && scopedSlots.icon) {
        iconNode = scopedSlots.icon({
          node: node === null || node === void 0 ? void 0 : node.getModel()
        });
      } else if (!node.vmIsLeaf) {
        isDefaultIcon = true;
        iconNode = getFolderIcon(h);
        if (node.loading && node.expanded) {
          iconNode = createVNode(Loading, null, null);
        }
      } else {
        iconNode = "";
      }
    } else if (icon) {
      iconNode = getTNode(icon, {
        createElement: h,
        node: node
      });
    }
    var wrapIconNode = createVNode("span", {
      "class": ["".concat(componentName, "__icon"), "".concat(classPrefix, "-folder-icon"), isDefaultIcon ? "".concat(componentName, "__icon--default") : ""],
      "trigger": "expand",
      "ignore": "active",
      "onmousedown": handleMousedown
    }, [iconNode]);
    return wrapIconNode;
  };
  return {
    renderIcon: renderIcon
  };
}

export { useRenderIcon as default };
//# sourceMappingURL=useRenderIcon.js.map
