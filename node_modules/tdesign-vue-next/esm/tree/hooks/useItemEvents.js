/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

import '../adapt.js';
import { usePrefixClass } from '../../hooks/useConfig.js';
import 'vue';
import '../../utils/withInstall.js';
import '../../hooks/useVModel.js';
import 'lodash-es';
import '../../hooks/useDefaultValue.js';
import 'tdesign-icons-vue-next';
import '../../checkbox/index.js';
import '../../checkbox/checkbox.js';
import '@babel/runtime/helpers/slicedToArray';
import '@babel/runtime/helpers/defineProperty';
import '../../checkbox/props.js';
import '../../hooks/useRipple.js';
import '../../hooks/useKeepAnimation.js';
import '../../config-provider/context.js';
import '../../_chunks/dep-29ab0aa0.js';
import '@babel/runtime/helpers/typeof';
import '../../_chunks/dep-fad4e87b.js';
import 'dayjs';
import '../../_chunks/dep-81c9c3a2.js';
import '../../config-provider/useConfig.js';
import '../../config-provider/type.js';
import '../../_chunks/dep-7b6ca170.js';
import '../../hooks/tnode.js';
import '../../utils/render-tnode.js';
import '../../checkbox/consts/index.js';
import '../../checkbox/hooks/useCheckboxLazyLoad.js';
import '../../_chunks/dep-9bd4fc40.js';
import '../../checkbox/hooks/useKeyboardEvent.js';
import '../../_chunks/dep-ae2e35f4.js';
import '../../hooks/useDisabled.js';
import '../../hooks/useReadonly.js';
import '../../checkbox/group.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../../checkbox/checkbox-group-props.js';
import '../../hooks/slot.js';
import '../../checkbox/style';
import '../../checkbox/type.js';
import '../../loading/index.js';
import '../../loading/directive.js';
import '../../loading/plugin.js';
import '../../_chunks/dep-89a96062.js';
import '../../loading/icon/gradient.js';
import '../../_chunks/dep-4605ddf4.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../../utils/dom.js';
import '../../loading/props.js';
import '../../hooks/useTeleport.js';
import '../../loading/style';
import '../../loading/type.js';
import '../../hooks/useGlobalIcon.js';
import '../../hooks/useLazyLoad.js';
import '../../hooks/useVirtualScrollNew.js';
import '../../hooks/useResizeObserver.js';
import '../../_chunks/dep-2b11775f.js';
import '@babel/runtime/helpers/asyncToGenerator';
import '@babel/runtime/helpers/classCallCheck';
import '@babel/runtime/helpers/createClass';
import '@babel/runtime/regenerator';
import '../../_chunks/dep-164cb331.js';
import '../../_chunks/dep-b9aef095.js';

function useItemEvents(state) {
  var context = state.context;
  var classPrefix = usePrefixClass().value;
  var handleChange = function handleChange(_, ctx) {
    var node = state.node;
    var event = new Event("change");
    var evtContext = {
      event: event,
      node: node
    };
    context.emit("change", evtContext, ctx);
  };
  var clicked = false;
  var handleClick = function handleClick(evt) {
    var _srcTarget$className, _srcTarget$className$;
    var node = state.node,
      treeScope = state.treeScope;
    var _treeScope$treeProps = treeScope.treeProps,
      treeProps = _treeScope$treeProps === void 0 ? {} : _treeScope$treeProps;
    var expandOnClickNode = treeProps.expandOnClickNode;
    var srcTarget = evt.target;
    var isBranchTrigger = node.children && expandOnClickNode && (srcTarget.className === "".concat(classPrefix, "-checkbox__input") || srcTarget.tagName.toLowerCase() === "input");
    if (clicked || isBranchTrigger) return;
    clicked = true;
    setTimeout(function () {
      clicked = false;
    });
    if (expandOnClickNode && node.children && ((_srcTarget$className = srcTarget.className) === null || _srcTarget$className === void 0 || (_srcTarget$className$ = _srcTarget$className.indexOf) === null || _srcTarget$className$ === void 0 ? void 0 : _srcTarget$className$.call(_srcTarget$className, "".concat(classPrefix, "-tree__label"))) !== -1) evt.preventDefault();
    var evtContext = {
      mouseEvent: evt,
      event: evt,
      node: node,
      path: node.getPath()
    };
    context.emit("click", evtContext);
  };
  return {
    handleChange: handleChange,
    handleClick: handleClick
  };
}

export { useItemEvents as default };
//# sourceMappingURL=useItemEvents.js.map
