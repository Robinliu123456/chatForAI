{"version":3,"file":"dialog-card.js","sources":["../../../components/dialog/dialog-card.tsx"],"sourcesContent":["import { computed, defineComponent, toRefs } from 'vue';\nimport {\n  CloseIcon as TdCloseIcon,\n  InfoCircleFilledIcon as TdInfoCircleFilledIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n} from 'tdesign-icons-vue-next';\nimport dialogCardProps from './dialog-card-props';\nimport { useGlobalIcon } from '../hooks/useGlobalIcon';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { useAction } from './hooks';\nimport { useContent, useTNodeJSX } from '../hooks/tnode';\nimport type { TdDialogProps } from './type';\nimport dialogProps from './props';\n\nexport default defineComponent({\n  name: 'TDialogCard',\n  props: {\n    ...dialogProps,\n    ...dialogCardProps,\n  },\n  setup(props) {\n    const COMPONENT_NAME = usePrefixClass('dialog');\n    const classPrefix = usePrefixClass();\n    const renderTNodeJSX = useTNodeJSX();\n    const renderContent = useContent();\n    const { globalConfig } = useConfig('dialog');\n    const { CloseIcon, InfoCircleFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon } = useGlobalIcon({\n      CloseIcon: TdCloseIcon,\n      InfoCircleFilledIcon: TdInfoCircleFilledIcon,\n      CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n      ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n    });\n    const { cancelBtn, confirmBtn, confirmLoading } = toRefs(props);\n\n    const confirmBtnAction = (e: MouseEvent) => props.onConfirm?.({ e });\n    const cancelBtnAction = (e: MouseEvent) => props.onCancel?.({ e });\n    const { getConfirmBtn, getCancelBtn } = useAction({ confirmBtnAction, cancelBtnAction });\n    // 是否非模态对话框\n    const isModeLess = computed(() => props.mode === 'modeless');\n    // 是否全屏对话框\n    const isFullScreen = computed(() => props.mode === 'full-screen');\n\n    const defaultFooter = (\n      <div>\n        {getCancelBtn({\n          cancelBtn: cancelBtn.value as TdDialogProps['cancelBtn'],\n          globalCancel: globalConfig.value.cancel,\n          className: `${COMPONENT_NAME.value}__cancel`,\n        })}\n        {getConfirmBtn({\n          theme: props?.theme,\n          confirmBtn: confirmBtn.value as TdDialogProps['confirmBtn'],\n          globalConfirm: globalConfig.value.confirm,\n          globalConfirmBtnTheme: globalConfig.value.confirmBtnTheme,\n          className: `${COMPONENT_NAME.value}__confirm`,\n          confirmLoading: confirmLoading.value,\n        })}\n      </div>\n    );\n\n    const footerContent = renderTNodeJSX('footer', defaultFooter);\n\n    const footerClassName = isFullScreen.value\n      ? [`${COMPONENT_NAME.value}__footer`, `${COMPONENT_NAME.value}__footer--fullscreen`]\n      : `${COMPONENT_NAME.value}__footer`;\n\n    const closeBtnAction = (e: MouseEvent) => props?.onCloseBtnClick?.({ e });\n\n    const onStopDown = (e: MouseEvent) => {\n      if (isModeLess.value && props?.draggable) e.stopPropagation();\n    };\n\n    const renderHeader = () => {\n      // header 值为 true 显示空白头部\n      const header = renderTNodeJSX('header', <h5 class=\"title\"></h5>) ?? false;\n      const headerClassName = isFullScreen.value\n        ? [`${COMPONENT_NAME.value}__header`, `${COMPONENT_NAME.value}__header--fullscreen`]\n        : `${COMPONENT_NAME.value}__header`;\n\n      const closeClassName = isFullScreen.value\n        ? [`${COMPONENT_NAME.value}__close`, `${COMPONENT_NAME.value}__close--fullscreen`]\n        : `${COMPONENT_NAME.value}__close`;\n      const getIcon = () => {\n        const icon = {\n          info: <InfoCircleFilledIcon class={`${classPrefix.value}-is-info`} />,\n          warning: <ErrorCircleFilledIcon class={`${classPrefix.value}-is-warning`} />,\n          danger: <ErrorCircleFilledIcon class={`${classPrefix.value}-is-error`} />,\n          success: <CheckCircleFilledIcon class={`${classPrefix.value}-is-success`} />,\n        };\n        return icon[props?.theme as keyof typeof icon];\n      };\n      return (\n        (header || props?.closeBtn) && (\n          <div class={headerClassName} onMousedown={onStopDown}>\n            <div class={`${COMPONENT_NAME.value}__header-content`}>\n              {getIcon()}\n              {header}\n            </div>\n\n            {props?.closeBtn ? (\n              <span class={closeClassName} onClick={closeBtnAction}>\n                {renderTNodeJSX('closeBtn', <CloseIcon />)}\n              </span>\n            ) : null}\n          </div>\n        )\n      );\n    };\n\n    const renderBody = () => {\n      const body = renderContent('default', 'body');\n      const bodyClassName =\n        props?.theme === 'default' ? [`${COMPONENT_NAME.value}__body`] : [`${COMPONENT_NAME.value}__body__icon`];\n      if (isFullScreen.value && footerContent) {\n        bodyClassName.push(`${COMPONENT_NAME.value}__body--fullscreen`);\n      } else if (isFullScreen.value) {\n        bodyClassName.push(`${COMPONENT_NAME.value}__body--fullscreen--without-footer`);\n      }\n      return (\n        <div class={bodyClassName} onMousedown={onStopDown}>\n          {body}\n        </div>\n      );\n    };\n\n    const renderFooter = () => {\n      return (\n        footerContent && (\n          <div class={footerClassName} onMousedown={onStopDown}>\n            {footerContent}\n          </div>\n        )\n      );\n    };\n\n    return {\n      renderHeader,\n      renderBody,\n      renderFooter,\n    };\n  },\n  render() {\n    return (\n      <>\n        {this.renderHeader()}\n        {this.renderBody()}\n        {!!this.footer && this.renderFooter()}\n      </>\n    );\n  },\n});\n"],"names":["defineComponent","name","props","_objectSpread","dialogProps","dialogCardProps","setup","COMPONENT_NAME","usePrefixClass","classPrefix","renderTNodeJSX","useTNodeJSX","renderContent","useContent","_useConfig","useConfig","globalConfig","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","InfoCircleFilledIcon","TdInfoCircleFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","_toRefs","toRefs","cancelBtn","confirmBtn","confirmLoading","confirmBtnAction","e","_props$onConfirm","onConfirm","call","cancelBtnAction","_props$onCancel","onCancel","_useAction","useAction","getConfirmBtn","getCancelBtn","isModeLess","computed","mode","isFullScreen","defaultFooter","value","globalCancel","cancel","className","concat","theme","globalConfirm","confirm","globalConfirmBtnTheme","confirmBtnTheme","footerContent","footerClassName","closeBtnAction","_props$onCloseBtnClic","onCloseBtnClick","onStopDown","draggable","stopPropagation","renderHeader","_renderTNodeJSX","header","_createVNode","headerClassName","closeClassName","getIcon","icon","info","warning","danger","success","closeBtn","renderBody","body","bodyClassName","push","renderFooter","render","_Fragment","footer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,kBAAeA,eAAgB,CAAA;AAC7BC,EAAAA,IAAM,EAAA,aAAA;EACNC,KAAO,EAAAC,aAAA,CAAAA,aAAA,KACFC,KAAA,CAAA,EACAC,eAAA,CACL;AACAC,EAAAA,OAAAA,SAAAA,MAAMJ,KAAO,EAAA;AACL,IAAA,IAAAK,cAAA,GAAiBC,eAAe,QAAQ,CAAA,CAAA;AAC9C,IAAA,IAAMC,cAAcD,cAAe,EAAA,CAAA;AACnC,IAAA,IAAME,iBAAiBC,WAAY,EAAA,CAAA;AACnC,IAAA,IAAMC,gBAAgBC,UAAW,EAAA,CAAA;AACjC,IAAA,IAAAC,UAAA,GAAyBC,SAAA,CAAU,QAAQ,CAAA;MAAnCC,YAAA,GAAAF,UAAA,CAAAE,YAAA,CAAA;IACR,IAAAC,cAAA,GAA0FC,aAAc,CAAA;AACtGC,QAAAA,SAAW,EAAAC,SAAA;AACXC,QAAAA,oBAAsB,EAAAC,oBAAA;AACtBC,QAAAA,qBAAuB,EAAAC,qBAAA;AACvBC,QAAAA,qBAAuB,EAAAC,qBAAAA;AACzB,OAAC,CAAA;MALOP,WAAW,GAAAF,cAAA,CAAXE,SAAW;MAAAE,sBAAA,GAAAJ,cAAA,CAAAI,oBAAA;MAAsBE,uBAAuB,GAAAN,cAAA,CAAvBM,qBAAuB;MAAAE,uBAAA,GAAAR,cAAA,CAAAQ,qBAAA,CAAA;AAMhE,IAAA,IAAAE,OAAA,GAAkDC,OAAO1B,KAAK,CAAA;MAAtD2B,SAAW,GAAAF,OAAA,CAAXE,SAAW;MAAAC,UAAA,GAAAH,OAAA,CAAAG,UAAA;MAAYC,cAAe,GAAAJ,OAAA,CAAfI,cAAe,CAAA;AAE9C,IAAA,IAAMC,mBAAmB,SAAnBA,iBAAoBC,CAAA,EAAA;AAAA,MAAA,IAAAC,gBAAA,CAAA;AAAA,MAAA,OAAA,CAAAA,gBAAA,GAAkBhC,MAAMiC,SAAY,MAAA,IAAA,IAAAD,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAlBA,gBAAA,CAAAE,IAAA,CAAAlC,OAAkB;AAAE+B,QAAAA,GAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AACnE,IAAA,IAAMI,kBAAkB,SAAlBA,gBAAmBJ,CAAA,EAAA;AAAA,MAAA,IAAAK,eAAA,CAAA;AAAA,MAAA,OAAA,CAAAA,eAAA,GAAkBpC,MAAMqC,QAAW,MAAA,IAAA,IAAAD,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAjBA,eAAA,CAAAF,IAAA,CAAAlC,OAAiB;AAAE+B,QAAAA,GAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;AAAA,KAAA,CAAA;IAC3D,IAAAO,UAAA,GAAkCC,UAAU;AAAET,QAAAA,gBAAA,EAAAA,gBAAA;AAAkBK,QAAAA,iBAAAA,eAAAA;AAAgB,OAAC,CAAA;MAA/EK,2BAAAA;MAAeC,YAAa,GAAAH,UAAA,CAAbG,YAAa,CAAA;IAEpC,IAAMC,UAAa,GAAAC,QAAA,CAAS,YAAA;AAAA,MAAA,OAAM3C,KAAA,CAAM4C,SAAS,UAAU,CAAA;KAAA,CAAA,CAAA;IAE3D,IAAMC,YAAe,GAAAF,QAAA,CAAS,YAAA;AAAA,MAAA,OAAM3C,KAAA,CAAM4C,SAAS,aAAa,CAAA;KAAA,CAAA,CAAA;AAEhE,IAAA,IAAME,0CAEDL,YAAa,CAAA;MACZd,WAAWA,SAAU,CAAAoB,KAAA;AACrBC,MAAAA,YAAA,EAAclC,aAAaiC,KAAM,CAAAE,MAAA;AACjCC,MAAAA,SAAA,EAAAC,EAAAA,CAAAA,MAAA,CAAc9C,cAAe,CAAA0C,KAAA,EAAA,UAAA,CAAA;KAC9B,CAAA,EACAP,aAAc,CAAA;AACbY,MAAAA,OAAOpD,KAAO,KAAA,IAAA,IAAPA,KAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,KAAO,CAAAoD,KAAA;MACdxB,YAAYA,UAAW,CAAAmB,KAAA;AACvBM,MAAAA,aAAA,EAAevC,aAAaiC,KAAM,CAAAO,OAAA;AAClCC,MAAAA,qBAAA,EAAuBzC,aAAaiC,KAAM,CAAAS,eAAA;AAC1CN,MAAAA,SAAA,KAAAC,MAAA,CAAc9C,cAAe,CAAA0C,KAAA,EAAA,WAAA,CAAA;MAC7BlB,gBAAgBA,cAAe,CAAAkB,KAAAA;AACjC,KAAC,CAAA,CAbF,CAAA,CAAA;AAiBG,IAAA,IAAAU,aAAA,GAAgBjD,cAAe,CAAA,QAAA,EAAUsC,aAAa,CAAA,CAAA;IAE5D,IAAMY,eAAkB,GAAAb,YAAA,CAAaE,KACjC,GAAA,CAAAI,EAAAA,CAAAA,MAAA,CAAI9C,cAAA,CAAe0C,KAAiB,kBAAAI,MAAA,CAAG9C,cAAe,CAAA0C,KAAA,EAAA,sBAAA,CAAA,CACtD,GAAAI,EAAAA,CAAAA,MAAA,CAAG9C,cAAe,CAAA0C,KAAA,EAAA,UAAA,CAAA,CAAA;AAEtB,IAAA,IAAMY,iBAAiB,SAAjBA,eAAkB5B,CAAA,EAAA;AAAA,MAAA,IAAA6B,qBAAA,CAAA;AAAA,MAAA,OAAkB5D,UAAAA,IAAAA,IAAAA,6CAAAA,MAAO6D,eAAkB,MAAA,IAAA,IAAAD,qBAAA,KAAzBA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAA,CAAA1B,IAAA,CAAAlC,OAAyB;AAAE+B,QAAAA,GAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;AAAA,KAAA,CAAA;AAElE,IAAA,IAAA+B,UAAA,GAAa,SAAbA,UAAAA,CAAc/B,CAAkB,EAAA;AAChC,MAAA,IAAAW,UAAA,CAAWK,SAAS/C,KAAO,aAAPA,KAAO,KAAA,KAAA,CAAA,IAAPA,KAAO,CAAA+D,SAAA,EAAWhC,CAAA,CAAEiC,eAAgB,EAAA,CAAA;KAC9D,CAAA;AAEA,IAAA,IAAMC,eAAe,SAAfA,eAAqB;AAAA,MAAA,IAAAC,eAAA,CAAA;MAEnB,IAAAC,MAAA,IAAAD,eAAA,GAAS1D,eAAe,QAAU,EAAA4D,WAAA,CAAA,IAAA,EAAA;AAAA,QAAA,OAAA,EAAA,OAAA;AAAA,OAAA,EAAA,IAAA,CAAuB,CAAK,MAAAF,IAAAA,IAAAA,eAAA,KAAAA,KAAAA,CAAAA,GAAAA,eAAA,GAAA,KAAA,CAAA;MACpE,IAAMG,eAAkB,GAAAxB,YAAA,CAAaE,KACjC,GAAA,CAAAI,EAAAA,CAAAA,MAAA,CAAI9C,cAAA,CAAe0C,KAAiB,kBAAAI,MAAA,CAAG9C,cAAe,CAAA0C,KAAA,EAAA,sBAAA,CAAA,CACtD,GAAAI,EAAAA,CAAAA,MAAA,CAAG9C,cAAe,CAAA0C,KAAA,EAAA,UAAA,CAAA,CAAA;MAEtB,IAAMuB,cAAiB,GAAAzB,YAAA,CAAaE,KAChC,GAAA,CAAAI,EAAAA,CAAAA,MAAA,CAAI9C,cAAA,CAAe0C,KAAgB,iBAAAI,MAAA,CAAG9C,cAAe,CAAA0C,KAAA,EAAA,qBAAA,CAAA,CACrD,GAAAI,EAAAA,CAAAA,MAAA,CAAG9C,cAAe,CAAA0C,KAAA,EAAA,SAAA,CAAA,CAAA;AACtB,MAAA,IAAMwB,UAAU,SAAVA,UAAgB;AACpB,QAAA,IAAMC,IAAO,GAAA;UACXC;+BAAsClE,YAAYwC,KAAiB,EAAA,UAAA,CAAA;WAAA,EAAA,IAAA,CAAA;UACnE2B;+BAA0CnE,YAAYwC,KAAoB,EAAA,aAAA,CAAA;WAAA,EAAA,IAAA,CAAA;UAC1E4B;+BAAyCpE,YAAYwC,KAAkB,EAAA,WAAA,CAAA;WAAA,EAAA,IAAA,CAAA;UACvE6B;+BAA0CrE,YAAYwC,KAAoB,EAAA,aAAA,CAAA;AAAA,WAAA,EAAA,IAAA,CAAA;SAC5E,CAAA;QACA,OAAOyB,KAAKxE,KAAO,KAAA,IAAA,IAAPA,KAAO,KAAPA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,KAAO,CAAAoD,KAAA,CAAA,CAAA;OACrB,CAAA;MACA,OAAA,CACGe,WAAUnE,KAAO,KAAA,IAAA,IAAPA,KAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPA,KAAO,CAAA6E,QAAA,CAAA,KAAAT,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EACJC;qBAA8BP,EAAAA,UAAAA;AAAA,OAAA,EAAA,CAAAM,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EAAA,EAAA,CAAAjB,MAAA,CACzB9C,cAAe,CAAA0C,KAAA,EAAA,kBAAA,CAAA;AAAA,OAAA,EAAA,CAC3BwB,OAAQ,EAAA,EACRJ,MAAA,CAGFnE,CAAAA,EAAAA,KAAO,KAAPA,IAAAA,IAAAA,KAAO,KAAPA,KAAAA,CAAAA,IAAAA,KAAO,CAAA6E,QAAA,GAAAT,WAAA,CAAA,MAAA,EAAA;AAAA,QAAA,OAAA,EACOE,cAAgB;QAAA,SAASX,EAAAA,cAAAA;OACnCnD,EAAAA,CAAAA,cAAA,CAAe,qCAAyB,IAAA,EAAA,IAAA,CAAA,CAAA,CAEzC,CAAA,GAAA,IAAA,CAVL,CAAA,CAAA;KAcP,CAAA;AAEA,IAAA,IAAMsE,aAAa,SAAbA,aAAmB;AACjB,MAAA,IAAAC,IAAA,GAAOrE,aAAc,CAAA,SAAA,EAAW,MAAM,CAAA,CAAA;MAC5C,IAAMsE,aACJ,GAAA,CAAAhF,KAAA,KAAA,IAAA,IAAAA,KAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,KAAA,CAAOoD,KAAU,MAAA,SAAA,GAAY,CAAAD,EAAAA,CAAAA,MAAA,CAAI9C,cAAe,CAAA0C,KAAA,EAAiB,QAAA,CAAA,CAAA,GAAA,CAAAI,EAAAA,CAAAA,MAAA,CAAI9C,cAAA,CAAe0C,KAAmB,EAAA,cAAA,CAAA,CAAA,CAAA;AACrG,MAAA,IAAAF,YAAA,CAAaE,SAASU,aAAe,EAAA;QACzBuB,aAAA,CAAAC,IAAA,CAAA9B,EAAAA,CAAAA,MAAA,CAAQ9C,cAAA,CAAe0C,KAAyB,EAAA,oBAAA,CAAA,CAAA,CAAA;AAChE,OAAA,MAAA,IAAWF,aAAaE,KAAO,EAAA;QACfiC,aAAA,CAAAC,IAAA,CAAA9B,EAAAA,CAAAA,MAAA,CAAQ9C,cAAA,CAAe0C,KAAyC,EAAA,oCAAA,CAAA,CAAA,CAAA;AAChF,OAAA;AACA,MAAA,OAAAqB,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EACcY;qBAA4BlB,EAAAA,UAAAA;AAAA,OAAA,EAAA,CACrCiB;KAGP,CAAA;AAEA,IAAA,IAAMG,eAAe,SAAfA,eAAqB;MAEvB,OAAAzB,aAAA,IAAAW,WAAA,CAAA,KAAA,EAAA;AAAA,QAAA,OAAA,EACcV;qBAA8BI,EAAAA,UAAAA;AAAA,OAAA,EAAA,CACvCL,cADF,CAAA,CAAA;KAKP,CAAA;IAEO,OAAA;AACLQ,MAAAA,YAAA,EAAAA,YAAA;AACAa,MAAAA,UAAA,EAAAA,UAAA;AACAI,MAAAA,YAAA,EAAAA,YAAAA;KACF,CAAA;GACF;EACAC,MAAS,EAAA,SAATA,MAASA,GAAA;IAEL,OAAAf,WAAA,CAAAgB,QAAA,EACG,IAAA,EAAA,CAAA,KAAKnB,YAAa,EAAA,EAClB,KAAKa,UAAW,EAAA,EAChB,CAAC,CAAC,IAAK,CAAAO,MAAA,IAAU,KAAKH,YAAa,EAAA,CAAA,CAAA,CAAA;AAG1C,GAAA;AACF,CAAC,CAAA;;;;"}