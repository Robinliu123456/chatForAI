/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
var utils_dom = require('../../utils/dom.js');
var common = require('../../_chunks/dep-d2dcffb5.js');
var isString = require('../../_chunks/dep-acdd3481.js');
require('../../_chunks/dep-c0c71352.js');
require('../../_chunks/dep-f3362596.js');
require('../../_chunks/dep-8af7b432.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-ae77d744.js');
require('../../_chunks/dep-fd23ce18.js');
require('../../_chunks/dep-750b6c90.js');

function useKeyboard(radioGroupRef, setInnerValue) {
  var checkRadioInGroup = function checkRadioInGroup(e) {
    var isCheckedCode = common.CHECKED_CODE_REG.test(e.key) || common.CHECKED_CODE_REG.test(e.code);
    if (isCheckedCode) {
      e.preventDefault();
      var inputNode = e.target.querySelector("input");
      if (!inputNode) return;
      var data = inputNode.dataset;
      if (inputNode.checked && data.allowUncheck) {
        setInnerValue(void 0, {
          e: e
        });
      } else {
        var value = !isNaN(Number(data.value)) ? Number(data.value) : data.value;
        value = isString.isString(value) && {
          "true": true,
          "false": false
        }[value] || value;
        value = isString.isString(value) && value[0] === "'" ? value.replace(/'/g, "") : value;
        setInnerValue(value, {
          e: e
        });
      }
    }
  };
  Vue.onMounted(function () {
    utils_dom.on(radioGroupRef.value, "keydown", checkRadioInGroup);
  });
  Vue.onBeforeMount(function () {
    utils_dom.off(radioGroupRef.value, "keydown", checkRadioInGroup);
  });
}

exports.useKeyboard = useKeyboard;
//# sourceMappingURL=useKeyboard.js.map
