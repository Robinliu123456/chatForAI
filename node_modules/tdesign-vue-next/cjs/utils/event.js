/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var camelCase = require('../_chunks/dep-9a234926.js');
var isString = require('../_chunks/dep-acdd3481.js');
var isFunction = require('../_chunks/dep-f3362596.js');
require('../_chunks/dep-179c4586.js');
require('../_chunks/dep-8af7b432.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-fd23ce18.js');
require('../_chunks/dep-65ed94ad.js');
require('../_chunks/dep-750b6c90.js');
require('../_chunks/dep-93deee44.js');
require('../_chunks/dep-b74aef17.js');
require('../_chunks/dep-53d908b3.js');
require('../_chunks/dep-ae77d744.js');

function getPropsApiByEvent(eventName) {
  return camelCase.camelCase("on-".concat(eventName));
}
function emitEvent(vm, eventName) {
  var emitEventMethodName;
  if (isString.isString(eventName)) {
    emitEventMethodName = getPropsApiByEvent(eventName);
  }
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }
  if (isFunction.isFunction(vm.$props[emitEventMethodName])) {
    var _vm$$props;
    (_vm$$props = vm.$props)[emitEventMethodName].apply(_vm$$props, args);
  } else {
    vm.$emit.apply(vm, [eventName].concat(args));
  }
}

exports.emitEvent = emitEvent;
exports.getPropsApiByEvent = getPropsApiByEvent;
//# sourceMappingURL=event.js.map
