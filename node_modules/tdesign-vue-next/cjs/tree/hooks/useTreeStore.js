/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var treeStore = require('../../_chunks/dep-257a39dc.js');
var Vue = require('vue');
require('tdesign-icons-vue-next');
require('../../checkbox/index.js');
require('../../loading/index.js');
require('../../config-provider/useConfig.js');
require('../../utils/dom.js');
require('@babel/runtime/helpers/slicedToArray');
require('@babel/runtime/helpers/asyncToGenerator');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
require('@babel/runtime/helpers/defineProperty');
require('@babel/runtime/regenerator');
var pick = require('../../_chunks/dep-eee7af37.js');
require('mitt');
require('../../_chunks/dep-287547d3.js');
require('../../_chunks/dep-02147c0b.js');
require('../../_chunks/dep-5c1c1647.js');
require('../../_chunks/dep-8af7b432.js');
require('@babel/runtime/helpers/typeof');
require('../../_chunks/dep-750b6c90.js');
require('../../_chunks/dep-3a71bf71.js');
require('../../_chunks/dep-179c4586.js');
require('../../_chunks/dep-fd23ce18.js');
require('../../_chunks/dep-65ed94ad.js');
require('../../_chunks/dep-55ae3cb5.js');
require('../../_chunks/dep-9e37eebf.js');
require('../../_chunks/dep-a01b02fa.js');
require('../../_chunks/dep-7b70fa2b.js');
require('../../_chunks/dep-901ff2b1.js');
require('../../_chunks/dep-f3362596.js');
require('../../_chunks/dep-ae77d744.js');
require('../../_chunks/dep-8db04cd4.js');
require('../../_chunks/dep-0d790559.js');
require('../../_chunks/dep-ec56dcd9.js');
require('../../_chunks/dep-b402ceae.js');
require('../../_chunks/dep-481d05e9.js');
require('../../_chunks/dep-b8cfc98c.js');
require('../../_chunks/dep-dc345794.js');
require('../../_chunks/dep-973f44c6.js');
require('../../_chunks/dep-2e858700.js');
require('../../_chunks/dep-b74aef17.js');
require('../../_chunks/dep-89db45fd.js');
require('../../_chunks/dep-438edd07.js');
require('../../_chunks/dep-10ffbad0.js');
require('../../_chunks/dep-bbc5435a.js');
require('../../_chunks/dep-470ac849.js');
require('../../_chunks/dep-14f725de.js');
require('../../_chunks/dep-db2cd3d2.js');
require('../../_chunks/dep-31fe118c.js');
require('../../_chunks/dep-3f6b2b9c.js');
require('../../_chunks/dep-acdd3481.js');
require('../../_chunks/dep-749b94aa.js');
require('../../_chunks/dep-d9378865.js');
require('../../_chunks/dep-0489844a.js');
require('../../_chunks/dep-0d817d77.js');
require('../../_chunks/dep-9a234926.js');
require('../../_chunks/dep-93deee44.js');
require('../../_chunks/dep-53d908b3.js');
require('../../checkbox/checkbox.js');
require('../../checkbox/props.js');
require('../../hooks/useVModel.js');
require('../../_chunks/dep-172ba234.js');
require('../../hooks/useRipple.js');
require('../../hooks/useKeepAnimation.js');
require('../../_chunks/dep-bc99882c.js');
require('../../_chunks/dep-dbac77fd.js');
require('../../_chunks/dep-c0c71352.js');
require('dayjs');
require('../../_chunks/dep-b75e3209.js');
require('../../hooks/useConfig.js');
require('../../_chunks/dep-dca6be9c.js');
require('../../hooks/tnode.js');
require('../../utils/render-tnode.js');
require('../../_chunks/dep-2930dcc3.js');
require('../../checkbox/consts/index.js');
require('../../checkbox/hooks/useCheckboxLazyLoad.js');
require('../../_chunks/dep-05614339.js');
require('../../checkbox/hooks/useKeyboardEvent.js');
require('../../_chunks/dep-d2dcffb5.js');
require('../../hooks/useDisabled.js');
require('../../hooks/useReadonly.js');
require('../../checkbox/group.js');
require('../../checkbox/checkbox-group-props.js');
require('../../hooks/slot.js');
require('../../_chunks/dep-a0482c90.js');
require('../../utils/withInstall.js');
require('../../_chunks/dep-f6db9929.js');
require('../../loading/plugin.js');
require('../../_chunks/dep-ade5be71.js');
require('../../loading/icon/gradient.js');
require('../../_chunks/dep-623661fb.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('../../loading/props.js');
require('../../hooks/useTeleport.js');
require('../../_chunks/dep-a246b8d5.js');
require('../../_chunks/dep-3a398159.js');
require('../../_chunks/dep-b377c7d2.js');
require('../../_chunks/dep-029e312d.js');
require('../../_chunks/dep-b694cee7.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);

function useTreeStore(state) {
  var props = state.props,
    context = state.context,
    refProps = state.refProps;
  var valueMode = props.valueMode,
    filter = props.filter,
    keys = props.keys;
  var store = new treeStore.TreeStore({
    valueMode: valueMode,
    filter: filter
  });
  var tValue = state.vmValue[0];
  var tActived = state.vmActived[0];
  var tExpanded = state.vmExpanded[0];
  var updateStoreConfig = function updateStoreConfig() {
    var storeProps = pick.pick(props, ["expandAll", "expandLevel", "expandMutex", "expandParent", "activable", "activeMultiple", "disabled", "disableCheck", "checkable", "draggable", "checkStrictly", "load", "lazy", "valueMode", "filter", "allowFoldNodeOnFilter"]);
    store.setConfig(storeProps);
  };
  var updateExpanded = function updateExpanded() {
    var expandParent = props.expandParent;
    if (!Array.isArray(tExpanded.value)) return;
    var expandedMap = /* @__PURE__ */new Map();
    tExpanded.value.forEach(function (val) {
      expandedMap.set(val, true);
      if (expandParent) {
        var node = store.getNode(val);
        if (node) {
          node.getModel().getParents().forEach(function (tn) {
            expandedMap.set(tn.value, true);
          });
        }
      }
    });
    var expandedArr = Array.from(expandedMap.keys());
    store.setExpanded(expandedArr);
  };
  var filterChanged = false;
  var prevExpanded = null;
  var expandFilterPath = function expandFilterPath() {
    if (!props.allowFoldNodeOnFilter) return;
    if (!filterChanged) return;
    filterChanged = false;
    if (props.filter) {
      if (!prevExpanded) {
        prevExpanded = store.getExpanded();
      }
      var pathValues = [];
      var allNodes = store.getNodes();
      allNodes.forEach(function (node) {
        if (node.vmIsLocked) {
          pathValues.push(node.value);
        }
      });
      store.setExpanded(pathValues);
    } else if (prevExpanded) {
      store.replaceExpanded(prevExpanded);
      prevExpanded = null;
    }
  };
  var checkFilterExpand = function checkFilterExpand(newFilter, previousFilter) {
    if (!props.allowFoldNodeOnFilter) return;
    filterChanged = newFilter !== previousFilter;
  };
  var handleLoad = function handleLoad(info) {
    var node = info.node;
    var evtCtx = {
      node: node.getModel()
    };
    if (Array.isArray(tValue.value) && tValue.value.length > 0) {
      store.replaceChecked(tValue.value);
    }
    if (Array.isArray(tExpanded.value) && tExpanded.value.length > 0) {
      store.replaceExpanded(tExpanded.value);
    }
    if (Array.isArray(tActived.value) && tActived.value.length > 0) {
      store.replaceActived(tActived.value);
    }
    if (props !== null && props !== void 0 && props.onLoad) {
      props === null || props === void 0 || props.onLoad(evtCtx);
    }
    context.emit("load", evtCtx);
  };
  var rebuild = function rebuild(list) {
    store.reload(list || []);
    store.refreshNodes();
    if (Array.isArray(tValue.value)) {
      store.setChecked(tValue.value);
    }
    updateExpanded();
    if (Array.isArray(tActived.value)) {
      store.setActived(tActived.value);
    }
    store.refreshState();
  };
  function initStore() {
    store.setConfig({
      keys: keys
    });
    updateStoreConfig();
    store.append(props.data || []);
    store.refreshNodes();
    if (Array.isArray(tValue.value)) {
      store.setChecked(tValue.value);
    }
    updateExpanded();
    if (Array.isArray(tActived.value)) {
      store.setActived(tActived.value);
    }
    store.emitter.on("load", handleLoad);
    store.emitter.on("update", expandFilterPath);
  }
  initStore();
  state.setStore(store);
  Vue.watch(function () {
    return _toConsumableArray__default["default"](tValue.value || []);
  }, function (nVal) {
    store.replaceChecked(nVal);
  });
  Vue.watch(function () {
    return _toConsumableArray__default["default"](tExpanded.value || []);
  }, function (nVal) {
    store.replaceExpanded(nVal);
  });
  Vue.watch(function () {
    return _toConsumableArray__default["default"](tActived.value || []);
  }, function (nVal) {
    store.replaceActived(nVal);
  });
  Vue.watch(refProps.filter, function (nVal, previousVal) {
    checkFilterExpand(nVal, previousVal);
  });
  Vue.watch(refProps.keys, function (keys2) {
    store.setConfig({
      keys: keys2
    });
  });
  Vue.watch(refProps.expandAll, function (nVal) {
    if (nVal) {
      var valueList = store.getNodes().filter(function (node) {
        return Array.isArray(node.children) && node.children.length;
      }).map(function (node) {
        return node.value;
      });
      store.setExpanded(valueList);
    } else {
      store.replaceExpanded(prevExpanded);
      prevExpanded = null;
    }
  });
  return {
    store: store,
    rebuild: rebuild,
    checkFilterExpand: checkFilterExpand,
    updateStoreConfig: updateStoreConfig,
    updateExpanded: updateExpanded,
    expandFilterPath: expandFilterPath
  };
}

exports["default"] = useTreeStore;
//# sourceMappingURL=useTreeStore.js.map
