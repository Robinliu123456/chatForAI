import { PropType } from 'vue';
declare const _default: import("vue").DefineComponent<{
    className: {
        type: StringConstructor;
        default: string;
    };
    value: {
        type: NumberConstructor;
        default: number;
    };
    maxValue: {
        type: NumberConstructor;
        default: number;
    };
    railStyle: {
        type: PropType<any>;
    };
    type: {
        type: PropType<"hue" | "alpha">;
        default: string;
    };
    disabled: BooleanConstructor;
    color: {
        type: PropType<import("@common/js/color-picker").Color>;
    };
    onChange: {
        type: FunctionConstructor;
        default: () => () => void;
    };
}, {
    baseClassName: import("vue").ComputedRef<any>;
    refThumb: import("vue").Ref<HTMLElement>;
    refPanel: import("vue").Ref<HTMLElement>;
    styles: import("vue").ComputedRef<{
        left: string;
        color: string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    className: {
        type: StringConstructor;
        default: string;
    };
    value: {
        type: NumberConstructor;
        default: number;
    };
    maxValue: {
        type: NumberConstructor;
        default: number;
    };
    railStyle: {
        type: PropType<any>;
    };
    type: {
        type: PropType<"hue" | "alpha">;
        default: string;
    };
    disabled: BooleanConstructor;
    color: {
        type: PropType<import("@common/js/color-picker").Color>;
    };
    onChange: {
        type: FunctionConstructor;
        default: () => () => void;
    };
}>>, {
    value: number;
    onChange: Function;
    disabled: boolean;
    type: "hue" | "alpha";
    className: string;
    maxValue: number;
}, {}>;
export default _default;
