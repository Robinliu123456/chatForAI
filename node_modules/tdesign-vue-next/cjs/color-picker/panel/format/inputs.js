/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _toConsumableArray = require('@babel/runtime/helpers/toConsumableArray');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var Vue = require('vue');
var colorPicker_props = require('../../props.js');
var color = require('../../../_chunks/dep-43b5d648.js');
require('@babel/runtime/helpers/classCallCheck');
require('@babel/runtime/helpers/createClass');
var input_index = require('../../../input/index.js');
var inputNumber_index = require('../../../input-number/index.js');
var colorPicker_panel_format_config = require('./config.js');
var throttle = require('../../../_chunks/dep-4396f8d3.js');
require('@babel/runtime/helpers/slicedToArray');
require('tinycolor2');
require('../../../_chunks/dep-acdd3481.js');
require('../../../_chunks/dep-8af7b432.js');
require('@babel/runtime/helpers/typeof');
require('../../../_chunks/dep-fd23ce18.js');
require('../../../_chunks/dep-750b6c90.js');
require('../../../_chunks/dep-31fe118c.js');
require('../../../input/input.js');
require('@babel/runtime/helpers/objectWithoutProperties');
require('tdesign-icons-vue-next');
require('../../../input/props.js');
require('../../../hooks/useDisabled.js');
require('../../../_chunks/dep-5c1c1647.js');
require('../../../hooks/useReadonly.js');
require('../../../hooks/useConfig.js');
require('../../../config-provider/useConfig.js');
require('../../../_chunks/dep-bc99882c.js');
require('../../../_chunks/dep-dbac77fd.js');
require('../../../_chunks/dep-c0c71352.js');
require('dayjs');
require('../../../_chunks/dep-9e37eebf.js');
require('../../../_chunks/dep-a01b02fa.js');
require('../../../_chunks/dep-7b70fa2b.js');
require('../../../_chunks/dep-901ff2b1.js');
require('../../../_chunks/dep-f3362596.js');
require('../../../_chunks/dep-ae77d744.js');
require('../../../_chunks/dep-8db04cd4.js');
require('../../../_chunks/dep-0d790559.js');
require('../../../_chunks/dep-ec56dcd9.js');
require('../../../_chunks/dep-b402ceae.js');
require('../../../_chunks/dep-0d817d77.js');
require('../../../_chunks/dep-bbc5435a.js');
require('../../../_chunks/dep-10ffbad0.js');
require('../../../_chunks/dep-89db45fd.js');
require('../../../_chunks/dep-b75e3209.js');
require('../../../_chunks/dep-55ae3cb5.js');
require('../../../_chunks/dep-481d05e9.js');
require('../../../_chunks/dep-b8cfc98c.js');
require('../../../_chunks/dep-dc345794.js');
require('../../../hooks/useGlobalIcon.js');
require('../../../hooks/tnode.js');
require('../../../utils/render-tnode.js');
require('../../../_chunks/dep-9a234926.js');
require('../../../_chunks/dep-179c4586.js');
require('../../../_chunks/dep-65ed94ad.js');
require('../../../_chunks/dep-93deee44.js');
require('../../../_chunks/dep-b74aef17.js');
require('../../../_chunks/dep-53d908b3.js');
require('../../../_chunks/dep-172ba234.js');
require('../../../_chunks/dep-2930dcc3.js');
require('../../../input/useInput.js');
require('../../../form/const.js');
require('../../../hooks/useKeepAnimation.js');
require('../../../hooks/useVModel.js');
require('../../../input/useLengthLimit.js');
require('../../../_chunks/dep-02147c0b.js');
require('../../../_chunks/dep-623661fb.js');
require('../../../_chunks/dep-14f725de.js');
require('../../../_chunks/dep-db2cd3d2.js');
require('../../../input/useInputEventHandler.js');
require('../../../input/useInputWidth.js');
require('../../../hooks/useResizeObserver.js');
require('../../../input/input-group.js');
require('../../../input/input-group-props.js');
require('../../../utils/withInstall.js');
require('../../../input-number/input-number.js');
require('../../../button/index.js');
require('../../../button/button.js');
require('../../../loading/index.js');
require('../../../_chunks/dep-f6db9929.js');
require('../../../loading/plugin.js');
require('../../../_chunks/dep-ade5be71.js');
require('../../../loading/icon/gradient.js');
require('../../../_chunks/dep-dca6be9c.js');
require('../../../utils/dom.js');
require('../../../loading/props.js');
require('../../../hooks/useTeleport.js');
require('../../../_chunks/dep-a246b8d5.js');
require('../../../_chunks/dep-d9378865.js');
require('../../../_chunks/dep-3a398159.js');
require('../../../_chunks/dep-470ac849.js');
require('../../../_chunks/dep-973f44c6.js');
require('../../../_chunks/dep-b377c7d2.js');
require('../../../_chunks/dep-029e312d.js');
require('../../../button/props.js');
require('../../../hooks/useRipple.js');
require('../../../input-number/props.js');
require('../../../input-number/hooks/useInputNumber.js');
require('../../../hooks/useCommonClassName.js');
require('../../../_chunks/dep-23173a3f.js');
require('../../../_chunks/dep-8ddb1659.js');
require('../../../_chunks/dep-ff66bcee.js');
require('../../../_chunks/dep-1c334ee9.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _toConsumableArray__default = /*#__PURE__*/_interopDefaultLegacy(_toConsumableArray);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var FormatInputs = Vue.defineComponent({
  name: "FormatInputs",
  inheritAttrs: false,
  props: _objectSpread(_objectSpread({}, colorPicker_props["default"]), {}, {
    color: {
      type: Object
    },
    onInputChange: {
      type: Function,
      "default": function _default() {
        return function () {};
      }
    }
  }),
  setup: function setup(props2) {
    var inputConfigs = Vue.computed(function () {
      var configs = _toConsumableArray__default["default"](colorPicker_panel_format_config.FORMAT_INPUT_CONFIG[props2.format]);
      if (props2.enableAlpha) {
        configs.push({
          type: "inputNumber",
          key: "a",
          min: 0,
          max: 100,
          format: function format(value) {
            return "".concat(value, "%");
          },
          flex: 1.15
        });
      }
      return configs;
    });
    var modelValue = Vue.reactive({});
    var lastModelValue = Vue.reactive({});
    var getFormatColorMap = function getFormatColorMap(type) {
      var color$1 = props2.color;
      if (type === "encode") {
        return {
          HSV: color$1.getHsva(),
          HSL: color$1.getHsla(),
          RGB: color$1.getRgba(),
          CMYK: color$1.getCmyk(),
          CSS: {
            css: color$1.css
          },
          HEX: {
            hex: color$1.hex
          }
        };
      }
      return {
        HSV: color.Color.object2color(modelValue, "HSV"),
        HSL: color.Color.object2color(modelValue, "HSL"),
        RGB: color.Color.object2color(modelValue, "RGB"),
        CMYK: color.Color.object2color(modelValue, "CMYK"),
        CSS: modelValue.css,
        HEX: modelValue.hex
      };
    };
    var updateModelValue = function updateModelValue() {
      var format = props2.format,
        color = props2.color;
      var values = getFormatColorMap("encode")[format];
      values.a = Math.round(color.alpha * 100);
      Object.keys(values).forEach(function (key) {
        modelValue[key] = values[key];
        lastModelValue[key] = values[key];
      });
    };
    updateModelValue();
    var throttleUpdate = throttle.throttle(updateModelValue, 100);
    Vue.watch(function () {
      var _props2$color = props2.color,
        saturation = _props2$color.saturation,
        hue = _props2$color.hue,
        value = _props2$color.value,
        alpha = _props2$color.alpha,
        css = _props2$color.css;
      return [saturation, hue, value, alpha, css, props2.format];
    }, throttleUpdate);
    var handleChange = function handleChange(key, v) {
      if (v === lastModelValue[key]) {
        return;
      }
      var value = getFormatColorMap("decode")[props2.format];
      props2.onInputChange(value, modelValue.a / 100, key, v);
    };
    return {
      modelValue: modelValue,
      inputConfigs: inputConfigs,
      handleChange: handleChange
    };
  },
  render: function render() {
    var _this = this;
    var inputProps = _objectSpread({}, this.inputProps || {});
    return Vue.createVNode("div", {
      "class": "input-group"
    }, [this.inputConfigs.map(function (config) {
      return Vue.createVNode("div", {
        "class": "input-group__item",
        "key": config.key,
        "style": {
          flex: config.flex || 1
        }
      }, [config.type === "input" ? Vue.createVNode(input_index.Input, Vue.mergeProps(inputProps, {
        "align": "center",
        "size": "small",
        "disabled": _this.disabled,
        "modelValue": _this.modelValue[config.key],
        "onUpdate:modelValue": function onUpdateModelValue($event) {
          return _this.modelValue[config.key] = $event;
        },
        "maxlength": _this.format === "HEX" ? 9 : void 0,
        "title": _this.modelValue[config.key],
        "onBlur": function onBlur(v) {
          return _this.handleChange(config.key, v);
        },
        "onEnter": function onEnter(v) {
          return _this.handleChange(config.key, v);
        }
      }), null) : Vue.createVNode(inputNumber_index.InputNumber, Vue.mergeProps(inputProps, {
        "align": "center",
        "size": "small",
        "disabled": _this.disabled,
        "modelValue": _this.modelValue[config.key],
        "onUpdate:modelValue": function onUpdateModelValue($event) {
          return _this.modelValue[config.key] = $event;
        },
        "title": _this.modelValue[config.key],
        "min": config.min,
        "max": config.max,
        "step": 1,
        "format": config.format,
        "theme": "normal",
        "onBlur": function onBlur(v) {
          return _this.handleChange(config.key, v);
        },
        "onEnter": function onEnter(v) {
          return _this.handleChange(config.key, v);
        }
      }), null)]);
    })]);
  }
});

exports["default"] = FormatInputs;
//# sourceMappingURL=inputs.js.map
