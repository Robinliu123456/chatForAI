import { PropType } from 'vue';
import { TdColorPickerProps } from './type';
declare const _default: import("vue").DefineComponent<{
    color: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    borderless: {
        type: BooleanConstructor;
        default: boolean;
    };
    clearable: {
        type: BooleanConstructor;
        default: boolean;
    };
    inputProps: {
        type: PropType<TdColorPickerProps["inputProps"]>;
        default: () => {
            autoWidth: boolean;
        };
    };
    onTriggerChange: {
        type: FunctionConstructor;
        default: () => () => void;
    };
    size: {
        type: PropType<TdColorPickerProps["size"]>;
        default: string;
    };
}, {
    baseClassName: import("vue").ComputedRef<any>;
    value: import("vue").Ref<string>;
    handleChange: (input: string) => void;
    sizeClassNames: import("vue").ComputedRef<{
        small: string;
        medium: string;
        large: string;
        default: string;
        xs: string;
        xl: string;
        block: string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    color: {
        type: StringConstructor;
        default: string;
    };
    disabled: {
        type: BooleanConstructor;
        default: boolean;
    };
    borderless: {
        type: BooleanConstructor;
        default: boolean;
    };
    clearable: {
        type: BooleanConstructor;
        default: boolean;
    };
    inputProps: {
        type: PropType<TdColorPickerProps["inputProps"]>;
        default: () => {
            autoWidth: boolean;
        };
    };
    onTriggerChange: {
        type: FunctionConstructor;
        default: () => () => void;
    };
    size: {
        type: PropType<TdColorPickerProps["size"]>;
        default: string;
    };
}>>, {
    color: string;
    disabled: boolean;
    size: import("..").SizeEnum;
    borderless: boolean;
    clearable: boolean;
    inputProps: {
        autoWidth: boolean;
    };
    onTriggerChange: Function;
}, {}>;
export default _default;
