/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _objectWithoutProperties = require('@babel/runtime/helpers/objectWithoutProperties');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var Vue = require('vue');
var tagInput_index = require('../tag-input/index.js');
var loading_index = require('../loading/index.js');
var hooks_useDefaultValue = require('../hooks/useDefaultValue.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useDisabled = require('../hooks/useDisabled.js');
var hooks_useReadonly = require('../hooks/useReadonly.js');
var isObject = require('../_chunks/dep-ae77d744.js');
require('../tag-input/tag-input.js');
require('tdesign-icons-vue-next');
require('../input/index.js');
require('../input/input.js');
require('../input/props.js');
require('../hooks/useGlobalIcon.js');
require('../config-provider/useConfig.js');
require('../_chunks/dep-bc99882c.js');
require('../_chunks/dep-dbac77fd.js');
require('@babel/runtime/helpers/typeof');
require('../_chunks/dep-c0c71352.js');
require('dayjs');
require('../_chunks/dep-9e37eebf.js');
require('../_chunks/dep-a01b02fa.js');
require('../_chunks/dep-7b70fa2b.js');
require('../_chunks/dep-901ff2b1.js');
require('../_chunks/dep-f3362596.js');
require('../_chunks/dep-8af7b432.js');
require('../_chunks/dep-8db04cd4.js');
require('../_chunks/dep-0d790559.js');
require('../_chunks/dep-750b6c90.js');
require('../_chunks/dep-fd23ce18.js');
require('../_chunks/dep-ec56dcd9.js');
require('../_chunks/dep-b402ceae.js');
require('../_chunks/dep-0d817d77.js');
require('../_chunks/dep-bbc5435a.js');
require('../_chunks/dep-10ffbad0.js');
require('../_chunks/dep-89db45fd.js');
require('../_chunks/dep-b75e3209.js');
require('../_chunks/dep-55ae3cb5.js');
require('../_chunks/dep-481d05e9.js');
require('../_chunks/dep-b8cfc98c.js');
require('../_chunks/dep-dc345794.js');
require('../_chunks/dep-acdd3481.js');
require('../hooks/tnode.js');
require('../utils/render-tnode.js');
require('../_chunks/dep-9a234926.js');
require('../_chunks/dep-179c4586.js');
require('../_chunks/dep-65ed94ad.js');
require('../_chunks/dep-93deee44.js');
require('../_chunks/dep-b74aef17.js');
require('../_chunks/dep-53d908b3.js');
require('../_chunks/dep-172ba234.js');
require('../_chunks/dep-2930dcc3.js');
require('../input/useInput.js');
require('../form/const.js');
require('../hooks/useKeepAnimation.js');
require('../hooks/useVModel.js');
require('../input/useLengthLimit.js');
require('../_chunks/dep-02147c0b.js');
require('../_chunks/dep-623661fb.js');
require('@babel/runtime/helpers/toConsumableArray');
require('../_chunks/dep-14f725de.js');
require('../_chunks/dep-31fe118c.js');
require('../_chunks/dep-db2cd3d2.js');
require('../_chunks/dep-5c1c1647.js');
require('../input/useInputEventHandler.js');
require('../input/useInputWidth.js');
require('../hooks/useResizeObserver.js');
require('../input/input-group.js');
require('../input/input-group-props.js');
require('../utils/withInstall.js');
require('../tag-input/props.js');
require('../tag-input/hooks/useDragSorter.js');
require('../tag-input/hooks/useHover.js');
require('../tag-input/hooks/useTagScroll.js');
require('../tag-input/hooks/useTagList.js');
require('../tag/index.js');
require('../tag/tag.js');
require('tinycolor2');
require('../tag/props.js');
require('../tag/check-tag.js');
require('../tag/check-tag-props.js');
require('../_chunks/dep-d2dcffb5.js');
require('../tag/check-tag-group.js');
require('../tag/check-tag-group-props.js');
require('../_chunks/dep-f6db9929.js');
require('../loading/plugin.js');
require('../_chunks/dep-ade5be71.js');
require('../loading/icon/gradient.js');
require('../_chunks/dep-dca6be9c.js');
require('../utils/dom.js');
require('../loading/props.js');
require('../hooks/useTeleport.js');
require('../_chunks/dep-a246b8d5.js');
require('../_chunks/dep-d9378865.js');
require('../_chunks/dep-3a398159.js');
require('../_chunks/dep-470ac849.js');
require('../_chunks/dep-973f44c6.js');
require('../_chunks/dep-b377c7d2.js');
require('../_chunks/dep-029e312d.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var _objectWithoutProperties__default = /*#__PURE__*/_interopDefaultLegacy(_objectWithoutProperties);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);

var _excluded = ["tips"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty__default["default"](e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var DEFAULT_KEYS = {
  label: "label",
  key: "key",
  children: "children"
};
function useMultiple(props, context, popupRef) {
  var _toRefs = Vue.toRefs(props),
    inputValue = _toRefs.inputValue;
  var classPrefix = hooks_useConfig.usePrefixClass();
  var tagInputRef = Vue.ref();
  var isMultipleFocus = Vue.ref(props.autofocus);
  var _useDefault = hooks_useDefaultValue["default"](inputValue, props.defaultInputValue, props.onInputChange, "inputValue"),
    _useDefault2 = _slicedToArray__default["default"](_useDefault, 2),
    tInputValue = _useDefault2[0],
    setTInputValue = _useDefault2[1];
  var disable = hooks_useDisabled.useDisabled();
  var isReadonly = hooks_useReadonly.useReadonly();
  var iKeys = Vue.computed(function () {
    return _objectSpread(_objectSpread({}, DEFAULT_KEYS), props.keys);
  });
  var tags = Vue.computed(function () {
    if (!(props.value instanceof Array)) {
      return isObject.isObject(props.value) ? [props.value[iKeys.value.label]] : [props.value];
    }
    return props.value.map(function (item) {
      return isObject.isObject(item) ? item[iKeys.value.label] : item;
    });
  });
  var tPlaceholder = Vue.computed(function () {
    return !tags.value || !tags.value.length ? props.placeholder : "";
  });
  var onTagInputChange = function onTagInputChange(val, context2) {
    var _props$onTagChange;
    if (context2.trigger === "tag-remove") {
      var _context2$e;
      (_context2$e = context2.e) === null || _context2$e === void 0 || _context2$e.stopPropagation();
    }
    (_props$onTagChange = props.onTagChange) === null || _props$onTagChange === void 0 || _props$onTagChange.call(props, val, context2);
  };
  var onInputChange = function onInputChange(val, ctx) {
    if (ctx.trigger === "enter" || ctx.trigger === "blur") return;
    setTInputValue(val, {
      trigger: ctx.trigger,
      e: ctx.e
    });
  };
  var onBlur = function onBlur(val, ctx) {
    var _popupRef$value, _props$onBlur;
    var overlayState = (_popupRef$value = popupRef.value) === null || _popupRef$value === void 0 ? void 0 : _popupRef$value.getOverlayState();
    if (overlayState !== null && overlayState !== void 0 && overlayState.hover) return;
    isMultipleFocus.value = false;
    (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 || _props$onBlur.call(props, props.value, _objectSpread(_objectSpread({}, ctx), {}, {
      tagInputValue: val
    }));
  };
  var onFocus = function onFocus(val, ctx) {
    var _popupRef$value2, _props$onFocus;
    var overlayState = (_popupRef$value2 = popupRef.value) === null || _popupRef$value2 === void 0 ? void 0 : _popupRef$value2.getOverlayState();
    if (isMultipleFocus.value || overlayState !== null && overlayState !== void 0 && overlayState.hover) return;
    isMultipleFocus.value = true;
    var params = _objectSpread(_objectSpread({}, ctx), {}, {
      tagInputValue: val
    });
    (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 || _props$onFocus.call(props, props.value, params);
  };
  var onEnter = function onEnter(val, ctx) {
    var _props$onEnter;
    var params = _objectSpread(_objectSpread({}, ctx), {}, {
      tagInputValue: val
    });
    (_props$onEnter = props.onEnter) === null || _props$onEnter === void 0 || _props$onEnter.call(props, props.value, params);
  };
  var renderSelectMultiple = function renderSelectMultiple(p) {
    var tagInputProps = _objectSpread(_objectSpread({}, p.commonInputProps), {}, {
      tagProps: props.tagProps,
      label: props.label,
      autoWidth: props.autoWidth,
      readonly: isReadonly.value,
      placeholder: tPlaceholder.value,
      minCollapsedNum: props.minCollapsedNum,
      collapsedItems: props.collapsedItems,
      tag: props.tag,
      value: tags.value,
      valueDisplay: props.valueDisplay,
      inputValue: p.popupVisible && p.allowInput ? tInputValue.value : "",
      inputProps: _objectSpread({
        readonly: !props.allowInput || isReadonly.value,
        inputClass: _defineProperty__default["default"]({}, "".concat(classPrefix.value, "-input--focused"), p.popupVisible)
      }, props.inputProps),
      suffixIcon: !disable.value && props.loading ? function () {
        return Vue.createVNode(loading_index.Loading, {
          "loading": true,
          "size": "small"
        }, null);
      } : props.suffixIcon
    }, props.tagInputProps);
    var _context$slots = context.slots;
      _context$slots.tips;
      var slots = _objectWithoutProperties__default["default"](_context$slots, _excluded);
    return Vue.createVNode(tagInput_index.TagInput, Vue.mergeProps({
      "ref": tagInputRef
    }, tagInputProps, {
      "onInputChange": onInputChange,
      "onChange": onTagInputChange,
      "onClear": p.onInnerClear,
      "onBlur": onBlur,
      "onEnter": onEnter,
      "onFocus": onFocus
    }), slots);
  };
  return {
    tags: tags,
    tPlaceholder: tPlaceholder,
    tagInputRef: tagInputRef,
    isMultipleFocus: isMultipleFocus,
    multipleInputValue: tInputValue,
    renderSelectMultiple: renderSelectMultiple
  };
}

exports["default"] = useMultiple;
//# sourceMappingURL=useMultiple.js.map
