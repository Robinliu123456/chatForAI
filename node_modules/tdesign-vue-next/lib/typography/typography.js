/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { defineComponent, createVNode, isVNode } from 'vue';
import { useTNodeJSX } from '../hooks/tnode.js';
import _Text from './text.js';
import 'lodash-es';
import '../utils/render-tnode.js';
import '@babel/runtime/helpers/typeof';
import '../hooks/useConfig.js';
import '../config-provider/useConfig.js';
import '../config-provider/context.js';
import '../_chunks/dep-a46dd404.js';
import '../_chunks/dep-6d42da9c.js';
import 'dayjs';
import './text-props.js';
import './utils/copy-to-clipboard/index.js';
import 'tdesign-icons-vue-next';
import './ellipsis.js';
import '@babel/runtime/helpers/defineProperty';
import './paragraph-props.js';
import '../tooltip/index.js';
import '../tooltip/tooltip.js';
import '@babel/runtime/helpers/slicedToArray';
import '../tooltip/props.js';
import '../popup/props.js';
import '../popup/index.js';
import '../popup/popup.js';
import '@popperjs/core';
import '../hooks/useKeepAnimation.js';
import '../_chunks/dep-7b6ca170.js';
import '../hooks/useVModel.js';
import '../utils/dom.js';
import '../popup/container.js';
import '@babel/runtime/helpers/toConsumableArray';
import '../hooks/useResizeObserver.js';
import '../utils/withInstall.js';
import '../tooltip/utils/index.js';
import '../button/index.js';
import '../button/button.js';
import '../loading/index.js';
import '../loading/directive.js';
import '../loading/plugin.js';
import '../_chunks/dep-07bb7e0e.js';
import '../loading/icon/gradient.js';
import '../_chunks/dep-9fb67ff6.js';
import '@babel/runtime/helpers/objectWithoutProperties';
import '../loading/props.js';
import '../hooks/useTeleport.js';
import '../button/props.js';
import '../hooks/useRipple.js';
import '../hooks/useDisabled.js';

function _isSlot(s) {
  return typeof s === 'function' || Object.prototype.toString.call(s) === '[object Object]' && !isVNode(s);
}
var _Typography = defineComponent({
  name: "TTypography",
  setup: function setup() {
    var renderTNodeJSX = useTNodeJSX();
    return function () {
      var _slot;
      return createVNode(_Text, null, _isSlot(_slot = renderTNodeJSX("default")) ? _slot : {
        "default": function _default() {
          return [_slot];
        }
      });
    };
  }
});

export { _Typography as default };
//# sourceMappingURL=typography.js.map
