/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { defineComponent, inject, computed, ref, watch, createVNode } from 'vue';
import tabPanelProps from './tab-panel-props.js';
import { usePrefixClass, useCommonClassName } from '../hooks/useConfig.js';
import useDestroyOnClose from '../hooks/useDestroyOnClose.js';
import { useContent } from '../hooks/tnode.js';
import '../config-provider/useConfig.js';
import 'lodash-es';
import '../config-provider/context.js';
import '../_chunks/dep-a46dd404.js';
import '@babel/runtime/helpers/typeof';
import '../_chunks/dep-6d42da9c.js';
import 'dayjs';
import '../utils/render-tnode.js';

var _TabPanel = defineComponent({
  name: "TTabPanel",
  props: tabPanelProps,
  setup: function setup(props2) {
    var COMPONENT_NAME = usePrefixClass("tab-panel");
    var _useCommonClassName = useCommonClassName(),
      STATUS = _useCommonClassName.STATUS;
    var renderTNodeContent = useContent();
    useDestroyOnClose();
    var tabs = inject("tabs");
    var isActive = computed(function () {
      return props2.value === tabs.value.value;
    });
    var isMount = ref(props2.lazy ? isActive.value : true);
    watch(isActive, function () {
      if (isActive.value) {
        if (!isMount.value) {
          isMount.value = true;
        }
      } else if (props2.destroyOnHide) {
        isMount.value = false;
      }
    }, {
      immediate: true
    });
    var tabPanelClass = computed(function () {
      return [COMPONENT_NAME.value, _defineProperty({}, STATUS.value.hidden, !isActive.value)];
    });
    return function () {
      if (!isMount.value) return null;
      return createVNode("div", {
        "class": tabPanelClass.value
      }, [renderTNodeContent("default", "panel")]);
    };
  }
});

export { _TabPanel as default };
//# sourceMappingURL=tab-panel.js.map
