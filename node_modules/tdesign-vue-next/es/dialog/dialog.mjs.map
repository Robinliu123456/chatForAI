{"version":3,"file":"dialog.mjs","sources":["../../../components/dialog/dialog.tsx"],"sourcesContent":["import { computed, defineComponent, nextTick, onBeforeUnmount, onMounted, ref, Transition, watch, Teleport } from 'vue';\nimport { DialogCloseContext } from './type';\nimport props from './props';\nimport { useConfig, usePrefixClass } from '../hooks/useConfig';\nimport { useSameTarget } from './hooks';\nimport useDestroyOnClose from '../hooks/useDestroyOnClose';\nimport { getScrollbarWidth } from '@tdesign/common-js/utils/getScrollbarWidth';\nimport useTeleport from '../hooks/useTeleport';\nimport usePopupManager from '../hooks/usePopupManager';\n\nimport TDialogCard from './dialog-card';\n\nfunction GetCSSValue(v: string | number) {\n  return Number.isNaN(Number(v)) ? v : `${Number(v)}px`;\n}\n\nlet mousePosition: { x: number; y: number } | null;\nconst getClickPosition = (e: MouseEvent) => {\n  mousePosition = {\n    x: e.clientX,\n    y: e.clientY,\n  };\n  setTimeout(() => {\n    mousePosition = null;\n  }, 100);\n};\n\nif (typeof window !== 'undefined' && window.document && window.document.documentElement) {\n  document.documentElement.addEventListener('click', getClickPosition, true);\n}\n\nfunction InitDragEvent(dragBox: HTMLElement) {\n  const target = dragBox;\n  const windowInnerWidth = window.innerWidth || document.documentElement.clientWidth;\n  const windowInnerHeight = window.innerHeight || document.documentElement.clientHeight;\n  target.addEventListener('mousedown', (targetEvent: MouseEvent) => {\n    // 算出鼠标相对元素的位置\n    const disX = targetEvent.clientX - target.offsetLeft;\n    const disY = targetEvent.clientY - target.offsetTop;\n    const dialogW = target.offsetWidth;\n    const dialogH = target.offsetHeight;\n    // 如果弹出框超出屏幕范围 不能进行拖拽\n    if (dialogW > windowInnerWidth || dialogH > windowInnerHeight) return;\n    function mouseMoverHandler(documentEvent: MouseEvent) {\n      // 用鼠标的位置减去鼠标相对元素的位置，得到元素的位置\n      let left = documentEvent.clientX - disX;\n      let top = documentEvent.clientY - disY;\n      // 临界判断\n      // 拖拽上左边界限制\n      if (left < 0) left = 0;\n      if (top < 0) top = 0;\n      if (windowInnerWidth - target.offsetWidth - left < 0) left = windowInnerWidth - target.offsetWidth;\n      if (windowInnerHeight - target.offsetHeight - top < 0) top = windowInnerHeight - target.offsetHeight;\n      target.style.position = 'absolute';\n      target.style.left = `${left}px`;\n      target.style.top = `${top}px`;\n    }\n    function mouseUpHandler() {\n      // 鼠标弹起来的时候不再移动\n      document.removeEventListener('mousemove', mouseMoverHandler);\n      // 预防鼠标弹起来后还会循环（即预防鼠标放上去的时候还会移动）\n      document.removeEventListener('mouseup', mouseUpHandler);\n    }\n    // 元素按下时注册document鼠标监听事件\n    document.addEventListener('mousemove', mouseMoverHandler);\n    // 鼠标弹起来移除document鼠标监听事件\n    document.addEventListener('mouseup', mouseUpHandler);\n    // 拖拽结束移除鼠标监听事件，解决文字拖拽结束事件未解绑问题\n    document.addEventListener('dragend', mouseUpHandler);\n  });\n}\n\nlet key = 1;\n\nexport default defineComponent({\n  name: 'TDialog',\n  // 注册v-draggable指令,传入true时候初始化拖拽事件\n  directives: {\n    draggable(el, binding) {\n      // el 指令绑定的元素\n      if (el && binding && binding.value) {\n        InitDragEvent(el);\n      }\n    },\n  },\n  inheritAttrs: false,\n  props,\n  emits: ['update:visible'],\n  setup(props, context) {\n    const COMPONENT_NAME = usePrefixClass('dialog');\n    const classPrefix = usePrefixClass();\n    const dialogEle = ref<HTMLElement | null>(null);\n    const dialogCardRef = ref<HTMLElement | null>(null);\n    const { globalConfig } = useConfig('dialog');\n    const confirmBtnAction = (context: { e: MouseEvent }) => {\n      props.onConfirm?.(context);\n    };\n    const cancelBtnAction = (context: { e: MouseEvent }) => {\n      props.onCancel?.(context);\n      emitCloseEvent({ e: context.e, trigger: 'cancel' });\n    };\n    // teleport容器\n    const teleportElement = useTeleport(() => props.attach);\n    useDestroyOnClose();\n    const timer = ref();\n    const styleEl = ref();\n    // 是否模态形式的对话框\n    const isModal = computed(() => props.mode === 'modal');\n    // 是否非模态对话框\n    const isModeLess = computed(() => props.mode === 'modeless');\n    // 是否全屏对话框\n    const isFullScreen = computed(() => props.mode === 'full-screen');\n    const computedVisible = computed(() => props.visible);\n    const maskClass = computed(() => [\n      `${COMPONENT_NAME.value}__mask`,\n      !props.showOverlay && `${classPrefix.value}-is-hidden`,\n    ]);\n    const positionClass = computed(() => {\n      if (isFullScreen.value) return [`${COMPONENT_NAME.value}__position_fullscreen`];\n      if (isModal.value || isModeLess.value) {\n        return [\n          `${COMPONENT_NAME.value}__position`,\n          !!props.top && `${COMPONENT_NAME.value}--top`,\n          `${props.placement && !props.top ? `${COMPONENT_NAME.value}--${props.placement}` : ''}`,\n        ];\n      }\n      return [];\n    });\n    const wrapClass = computed(() =>\n      isFullScreen.value || isModal.value || isModeLess.value ? [`${COMPONENT_NAME.value}__wrap`] : null,\n    );\n    const positionStyle = computed(() => {\n      if (isFullScreen.value) return {}; // 全屏模式，top属性不生效\n\n      // 此处获取定位方式 top 优先级较高 存在时 默认使用top定位\n      const { top } = props;\n      let topStyle = {};\n      if (top !== undefined) {\n        const topValue = GetCSSValue(top);\n        topStyle = { paddingTop: topValue };\n      }\n      return topStyle;\n    });\n    const dialogClass = computed(() => {\n      const dialogClass = [\n        `${COMPONENT_NAME.value}`,\n        `${COMPONENT_NAME.value}__modal-${props.theme}`,\n        isModeLess.value && props.draggable && `${COMPONENT_NAME.value}--draggable`,\n        props.dialogClassName,\n      ];\n\n      if (isFullScreen.value) {\n        dialogClass.push(`${COMPONENT_NAME.value}__fullscreen`);\n      } else {\n        dialogClass.push(...[`${COMPONENT_NAME.value}--default`, `${COMPONENT_NAME.value}--${props.placement}`]);\n      }\n      return dialogClass;\n    });\n    const dialogStyle = computed(() => {\n      return !isFullScreen.value ? { width: GetCSSValue(props.width), ...props.dialogStyle } : { ...props.dialogStyle }; // width全屏模式不生效\n    });\n    const { isLastDialog } = usePopupManager('dialog', {\n      visible: computedVisible,\n    });\n\n    watch(\n      () => props.visible,\n      (value) => {\n        if (value) {\n          if ((isModal.value && !props.showInAttachedElement) || isFullScreen.value) {\n            if (props.preventScrollThrough) {\n              document.body.appendChild(styleEl.value);\n            }\n\n            nextTick(() => {\n              if (mousePosition && dialogEle.value) {\n                dialogEle.value.style.transformOrigin = `${mousePosition.x - dialogEle.value.offsetLeft}px ${\n                  mousePosition.y - dialogEle.value.offsetTop\n                }px`;\n              }\n            });\n          }\n          // 清除鼠标焦点 避免entry事件多次触发（按钮弹出弹窗 不移除焦点 立即按Entry按键 会造成弹窗关闭再弹出）\n          (document.activeElement as HTMLElement)?.blur();\n        } else {\n          clearStyleFunc();\n        }\n        addKeyboardEvent(value);\n      },\n    );\n\n    function destroySelf() {\n      styleEl.value.parentNode?.removeChild?.(styleEl.value);\n    }\n\n    function clearStyleFunc() {\n      clearTimeout(timer.value);\n      timer.value = setTimeout(() => {\n        destroySelf();\n      }, 150);\n    }\n\n    const addKeyboardEvent = (status: boolean) => {\n      if (status) {\n        document.addEventListener('keydown', keyboardEvent);\n        props.confirmOnEnter && document.addEventListener('keydown', keyboardEnterEvent);\n      } else {\n        document.removeEventListener('keydown', keyboardEvent);\n        props.confirmOnEnter && document.removeEventListener('keydown', keyboardEnterEvent);\n      }\n    };\n    // 回车触发确认事件\n    const keyboardEnterEvent = (e: KeyboardEvent) => {\n      const eventSrc = e.target as HTMLElement;\n      if (eventSrc.tagName.toLowerCase() === 'input') return; // 若是input触发 则不执行\n      const { code } = e;\n      if ((code === 'Enter' || code === 'NumpadEnter') && isLastDialog()) {\n        props.onConfirm?.({ e });\n      }\n    };\n    const keyboardEvent = (e: KeyboardEvent) => {\n      if (e.code === 'Escape' && isLastDialog()) {\n        props.onEscKeydown?.({ e });\n        // 根据closeOnEscKeydown判断按下ESC时是否触发close事件\n        if (props.closeOnEscKeydown ?? globalConfig.value.closeOnEscKeydown) {\n          emitCloseEvent({ e, trigger: 'esc' });\n        }\n      }\n    };\n    const overlayAction = (e: MouseEvent) => {\n      if (props.showOverlay && (props.closeOnOverlayClick ?? globalConfig.value.closeOnOverlayClick)) {\n        props.onOverlayClick?.({ e });\n        emitCloseEvent({ e, trigger: 'overlay' });\n      }\n    };\n    const { onClick, onMousedown, onMouseup } = useSameTarget(overlayAction);\n    const closeBtnAction = (context: { e: MouseEvent }) => {\n      props.onCloseBtnClick?.(context);\n      emitCloseEvent({\n        trigger: 'close-btn',\n        e: context.e,\n      });\n    };\n\n    // 打开弹窗动画开始时事件\n    const beforeEnter = () => {\n      props.onBeforeOpen?.();\n    };\n\n    // 打开弹窗动画结束时事件\n    const afterEnter = () => {\n      props.onOpened?.();\n    };\n\n    // 关闭弹窗动画开始时事件\n    const beforeLeave = () => {\n      props.onBeforeClose?.();\n    };\n\n    // 关闭弹窗动画结束时事件\n    const afterLeave = () => {\n      if (isModeLess.value && props.draggable && dialogEle.value) {\n        // 关闭弹窗 清空拖拽设置的相关css\n        dialogEle.value.style.position = 'relative';\n        dialogEle.value.style.left = 'unset';\n        dialogEle.value.style.top = 'unset';\n      }\n      props.onClosed?.();\n    };\n\n    const emitCloseEvent = (ctx: DialogCloseContext) => {\n      props.onClose?.(ctx);\n      // 默认关闭弹窗\n      context.emit('update:visible', false);\n    };\n\n    // Vue在引入阶段对事件的处理还做了哪些初始化操作。Vue在实例上用一个_events属性存贮管理事件的派发和更新，\n    // 暴露出$on, $once, $off, $emit方法给外部管理事件和派发执行事件\n    // 所以通过判断_events某个事件下监听函数数组是否超过一个，可以判断出组件是否监听了当前事件\n    const hasEventOn = (name: string) => {\n      // _events 因没有被暴露在vue实例接口中，只能把这个规则注释掉\n      // eslint-disable-next-line dot-notation\n      // @ts-ignore\n      const eventFuncs = this['_events']?.[name];\n      return !!eventFuncs?.length;\n    };\n    const renderDialog = () => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const { theme, onConfirm, onCancel, onCloseBtnClick, ...otherProps } = props;\n      return (\n        /** 非模态形态下draggable为true才允许拖拽 */\n        <div class={wrapClass.value}>\n          <div\n            class={positionClass.value}\n            style={positionStyle.value}\n            onClick={onClick}\n            onMousedown={onMousedown}\n            onMouseup={onMouseup}\n          >\n            <div\n              key=\"dialog\"\n              class={dialogClass.value}\n              style={dialogStyle.value}\n              v-draggable={isModeLess.value && props.draggable}\n              ref={dialogEle}\n            >\n              <TDialogCard\n                ref={dialogCardRef}\n                theme={theme}\n                {...otherProps}\n                v-slots={context.slots}\n                onConfirm={confirmBtnAction}\n                onCancel={cancelBtnAction}\n                onCloseBtnClick={closeBtnAction}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    };\n\n    onMounted(() => {\n      const hasScrollBar = document.documentElement.scrollHeight > document.documentElement.clientHeight;\n      const scrollWidth = hasScrollBar ? getScrollbarWidth() : 0;\n      styleEl.value = document.createElement('style');\n      styleEl.value.dataset.id = `td_dialog_${+new Date()}_${(key += 1)}`;\n      styleEl.value.innerHTML = `\n        html body {\n          overflow-y: hidden;\n          width: calc(100% - ${scrollWidth}px);\n        }\n      `;\n    });\n\n    onBeforeUnmount(() => {\n      addKeyboardEvent(false);\n      destroySelf();\n    });\n\n    return {\n      COMPONENT_NAME,\n      isModal,\n      isModeLess,\n      isFullScreen,\n      maskClass,\n      dialogClass,\n      dialogStyle,\n      dialogEle,\n      beforeEnter,\n      afterEnter,\n      beforeLeave,\n      afterLeave,\n      hasEventOn,\n      renderDialog,\n      teleportElement,\n    };\n  },\n  render() {\n    const { COMPONENT_NAME } = this;\n    const maskView = (this.isModal || this.isFullScreen) && <div key=\"mask\" class={this.maskClass}></div>;\n    const dialogView = this.renderDialog();\n    const view = [maskView, dialogView];\n    const ctxStyle = { zIndex: this.zIndex };\n    // dialog__ctx--fixed 绝对定位\n    // dialog__ctx--absolute 挂载在attach元素上 相对定位\n    // __ctx--modeless modeless 点击穿透\n    const ctxClass = [\n      `${COMPONENT_NAME}__ctx`,\n      {\n        [`${COMPONENT_NAME}__ctx--fixed`]: this.isModal || this.isFullScreen,\n        [`${COMPONENT_NAME}__ctx--absolute`]: this.isModal && this.showInAttachedElement,\n        [`${COMPONENT_NAME}__ctx--modeless`]: this.isModeLess,\n      },\n    ];\n    return (\n      <Teleport disabled={!this.attach || !this.teleportElement} to={this.teleportElement}>\n        <Transition\n          duration={300}\n          name={`${COMPONENT_NAME}-zoom__vue`}\n          onBeforeEnter={this.beforeEnter}\n          onAfterEnter={this.afterEnter}\n          onBeforeLeave={this.beforeLeave}\n          onAfterLeave={this.afterLeave}\n        >\n          {(!this.destroyOnClose || this.visible) && (\n            <div v-show={this.visible} class={ctxClass} style={ctxStyle} {...this.$attrs}>\n              {view}\n            </div>\n          )}\n        </Transition>\n      </Teleport>\n    );\n  },\n});\n"],"names":["GetCSSValue","v","Number","isNaN","concat","mousePosition","getClickPosition","e","x","clientX","y","clientY","setTimeout","window","document","documentElement","addEventListener","InitDragEvent","dragBox","target","windowInnerWidth","innerWidth","clientWidth","windowInnerHeight","innerHeight","clientHeight","targetEvent","disX","offsetLeft","disY","offsetTop","dialogW","offsetWidth","dialogH","offsetHeight","mouseMoverHandler","documentEvent","left","top","style","position","mouseUpHandler","removeEventListener","key","defineComponent","name","directives","draggable","el","binding","value","inheritAttrs","props","emits","setup","context","_this","COMPONENT_NAME","usePrefixClass","classPrefix","dialogEle","ref","dialogCardRef","_useConfig","useConfig","globalConfig","confirmBtnAction","_props2$onConfirm","onConfirm","cancelBtnAction","_props2$onCancel","onCancel","emitCloseEvent","trigger","teleportElement","useTeleport","attach","useDestroyOnClose","timer","styleEl","isModal","computed","mode","isModeLess","isFullScreen","computedVisible","visible","maskClass","showOverlay","positionClass","placement","wrapClass","positionStyle","topStyle","topValue","paddingTop","dialogClass","theme","dialogClassName","push","apply","dialogStyle","_objectSpread","width","_usePopupManager","usePopupManager","isLastDialog","watch","_document$activeEleme","showInAttachedElement","preventScrollThrough","body","appendChild","nextTick","transformOrigin","activeElement","blur","clearStyleFunc","addKeyboardEvent","destroySelf","_styleEl$value$parent","_styleEl$value$parent2","parentNode","removeChild","call","clearTimeout","status","keyboardEvent","confirmOnEnter","keyboardEnterEvent","eventSrc","tagName","toLowerCase","code","_props2$onConfirm2","_props2$onEscKeydown","_props2$closeOnEscKey","onEscKeydown","closeOnEscKeydown","overlayAction","_props2$closeOnOverla","closeOnOverlayClick","_props2$onOverlayClic","onOverlayClick","_useSameTarget","useSameTarget","onClick","onMousedown","onMouseup","closeBtnAction","_props2$onCloseBtnCli","onCloseBtnClick","beforeEnter","_props2$onBeforeOpen","onBeforeOpen","afterEnter","_props2$onOpened","onOpened","beforeLeave","_props2$onBeforeClose","onBeforeClose","afterLeave","_props2$onClosed","onClosed","ctx","_props2$onClose","onClose","emit","hasEventOn","_this$_events","eventFuncs","length","renderDialog","otherProps","_createVNode","_withDirectives","TDialogCard","_mergeProps","slots","_resolveDirective","onMounted","hasScrollBar","scrollHeight","scrollWidth","getScrollbarWidth","createElement","dataset","id","Date","innerHTML","onBeforeUnmount","render","_this2","maskView","dialogView","view","ctxStyle","zIndex","ctxClass","_defineProperty","Teleport","_default","Transition","destroyOnClose","$attrs"],"mappings":"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"}