/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { defineComponent, toRefs, provide, reactive, createVNode, mergeProps } from 'vue';
import props from './props.mjs';
import _BreadcrumbItem from './breadcrumb-item.mjs';
import { useTNodeJSX } from '../hooks/tnode.mjs';
import { usePrefixClass } from '../hooks/useConfig.mjs';
import '../_chunks/dep-96b403e3.mjs';
import '../_chunks/dep-7c8701fc.mjs';
import 'tdesign-icons-vue-next';
import './breadcrumb-item-props.mjs';
import '../tooltip/index.mjs';
import '../tooltip/tooltip.mjs';
import '../_chunks/dep-a3e567cf.mjs';
import '../_chunks/dep-6ac84404.mjs';
import 'lodash-es';
import '../tooltip/props.mjs';
import '../popup/props.mjs';
import '../popup/index.mjs';
import '../popup/popup.mjs';
import '@popperjs/core';
import '../hooks/index.mjs';
import '../hooks/icon.mjs';
import '../hooks/slot.mjs';
import '../utils/render-tnode.mjs';
import '../hooks/useCommonClassName.mjs';
import '../config-provider/useConfig.mjs';
import '../config-provider/context.mjs';
import '../_chunks/dep-2895d202.mjs';
import '../_chunks/dep-23a6b274.mjs';
import '../_chunks/dep-f9079916.mjs';
import '../_chunks/dep-c3b9ffc0.mjs';
import '../config-provider/type.mjs';
import '../hooks/useDefaultValue.mjs';
import '../hooks/useDestroyOnClose.mjs';
import '../hooks/useKeepAnimation.mjs';
import '../hooks/useRipple.mjs';
import '../_chunks/dep-4ad0839f.mjs';
import '../hooks/useVirtualScroll.mjs';
import '../hooks/useVModel.mjs';
import '../hooks/useImagePreviewUrl.mjs';
import '../_chunks/dep-53d9b6da.mjs';
import '../_chunks/dep-30c62f61.mjs';
import '../utils/dom.mjs';
import '../popup/container.mjs';
import '../_chunks/dep-87669a0e.mjs';
import '../hooks/useResizeObserver.mjs';
import '../utils/withInstall.mjs';
import './style/css.mjs';
import '../popup/type.mjs';
import '../tooltip/utils/index.mjs';
import '../tooltip/type.mjs';
import '../hooks/useGlobalIcon.mjs';

var _Breadcrumb = defineComponent({
  name: "TBreadcrumb",
  props: props,
  setup: function setup(props2, _ref) {
    var slots = _ref.slots;
    var _toRefs = toRefs(props2),
      separator = _toRefs.separator,
      theme = _toRefs.theme,
      maxItemWidth = _toRefs.maxItemWidth;
    var COMPONENT_NAME = usePrefixClass("breadcrumb");
    provide("tBreadcrumb", reactive({
      separator: separator,
      theme: theme,
      slots: {
        separator: slots.separator
      },
      maxItemWidth: maxItemWidth
    }));
    var renderTNodeJSX = useTNodeJSX();
    return function () {
      var content = renderTNodeJSX("default");
      if (props2.options && props2.options.length) {
        content = props2.options.map(function (option, index) {
          return createVNode(_BreadcrumbItem, mergeProps(option, {
            "key": index
          }), {
            "default": function _default() {
              return [option["default"] || option.content];
            }
          });
        });
      }
      return createVNode("div", {
        "class": COMPONENT_NAME.value
      }, [content]);
    };
  }
});

export { _Breadcrumb as default };
//# sourceMappingURL=breadcrumb.mjs.map
