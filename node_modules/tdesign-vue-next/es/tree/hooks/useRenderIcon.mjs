/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { createVNode } from 'vue';
import '../adapt.mjs';
import { getTNode } from '../util.mjs';
import { usePrefixClass } from '../../hooks/useConfig.mjs';
import { useGlobalIcon } from '../../hooks/useGlobalIcon.mjs';
import { CaretRightSmallIcon } from 'tdesign-icons-vue-next';
import { Loading } from '../../loading/index.mjs';
import '../../utils/withInstall.mjs';
import '../../hooks/useVModel.mjs';
import 'lodash-es';
import '../../hooks/useDefaultValue.mjs';
import '../../checkbox/index.mjs';
import '../../checkbox/checkbox.mjs';
import '../../_chunks/dep-a3e567cf.mjs';
import '../../_chunks/dep-6ac84404.mjs';
import '../../_chunks/dep-96b403e3.mjs';
import '../../_chunks/dep-7c8701fc.mjs';
import '../../checkbox/props.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../config-provider/context.mjs';
import '../../_chunks/dep-2895d202.mjs';
import '../../_chunks/dep-23a6b274.mjs';
import '../../_chunks/dep-f9079916.mjs';
import '../../_chunks/dep-c3b9ffc0.mjs';
import '../../config-provider/useConfig.mjs';
import '../../config-provider/type.mjs';
import '../../_chunks/dep-4ad0839f.mjs';
import '../../hooks/tnode.mjs';
import '../../utils/render-tnode.mjs';
import '../../checkbox/consts/index.mjs';
import '../../checkbox/hooks/useCheckboxLazyLoad.mjs';
import '../../_chunks/dep-651c8c97.mjs';
import '../../checkbox/hooks/useKeyboardEvent.mjs';
import '../../_chunks/dep-59dbd329.mjs';
import '../../hooks/useDisabled.mjs';
import '../../hooks/useReadonly.mjs';
import '../../checkbox/group.mjs';
import '../../_chunks/dep-87669a0e.mjs';
import '../../checkbox/checkbox-group-props.mjs';
import '../../hooks/slot.mjs';
import './style/css.mjs';
import '../../checkbox/type.mjs';
import '../../hooks/useLazyLoad.mjs';
import '../../utils/dom.mjs';
import '../../hooks/useVirtualScrollNew.mjs';
import '../../hooks/useResizeObserver.mjs';
import '../../_chunks/dep-3e2c3218.mjs';
import '../../_chunks/dep-1cd1bc71.mjs';
import '../../_chunks/dep-cf893fd5.mjs';
import '../../_chunks/dep-30c62f61.mjs';
import '../../_chunks/dep-8117ebdb.mjs';
import '../../loading/directive.mjs';
import '../../loading/plugin.mjs';
import '../../_chunks/dep-433c4f57.mjs';
import '../../loading/icon/gradient.mjs';
import '../../_chunks/dep-5211a143.mjs';
import '../../_chunks/dep-e155a416.mjs';
import '../../loading/props.mjs';
import '../../hooks/useTeleport.mjs';
import '../../loading/type.mjs';

function useRenderIcon(state) {
  var classPrefix = usePrefixClass().value;
  var componentName = usePrefixClass("tree").value;
  var getFolderIcon = function getFolderIcon(h) {
    var _useGlobalIcon = useGlobalIcon({
        CaretRightSmallIcon: CaretRightSmallIcon
      }),
      CaretRightSmallIcon$1 = _useGlobalIcon.CaretRightSmallIcon;
    return createVNode(CaretRightSmallIcon$1, null, null);
  };
  var handleMousedown = function handleMousedown(evt) {
    evt.preventDefault();
  };
  var renderIcon = function renderIcon(h) {
    var node = state.node,
      treeScope = state.treeScope;
    var scopedSlots = treeScope.scopedSlots;
    var treeProps = (treeScope === null || treeScope === void 0 ? void 0 : treeScope.treeProps) || {};
    var icon = treeProps.icon;
    var isDefaultIcon = false;
    var iconNode = null;
    if (icon === true) {
      if (scopedSlots !== null && scopedSlots !== void 0 && scopedSlots.icon) {
        iconNode = scopedSlots.icon({
          node: node === null || node === void 0 ? void 0 : node.getModel()
        });
      } else if (!node.vmIsLeaf) {
        isDefaultIcon = true;
        iconNode = getFolderIcon(h);
        if (node.loading && node.expanded) {
          iconNode = createVNode(Loading, null, null);
        }
      } else {
        iconNode = "";
      }
    } else if (icon) {
      iconNode = getTNode(icon, {
        createElement: h,
        node: node
      });
    }
    var wrapIconNode = createVNode("span", {
      "class": ["".concat(componentName, "__icon"), "".concat(classPrefix, "-folder-icon"), isDefaultIcon ? "".concat(componentName, "__icon--default") : ""],
      "trigger": "expand",
      "ignore": "active",
      "onmousedown": handleMousedown
    }, [iconNode]);
    return wrapIconNode;
  };
  return {
    renderIcon: renderIcon
  };
}

export { useRenderIcon as default };
//# sourceMappingURL=useRenderIcon.mjs.map
