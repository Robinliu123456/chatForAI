/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { isObject, mapKeys, isEqual } from 'lodash-es';
import { LoadingPlugin } from './plugin.mjs';
import '../_chunks/dep-96b403e3.mjs';
import '../_chunks/dep-7c8701fc.mjs';
import 'vue';
import '../_chunks/dep-433c4f57.mjs';
import '../_chunks/dep-a3e567cf.mjs';
import '../_chunks/dep-6ac84404.mjs';
import './icon/gradient.mjs';
import '../_chunks/dep-4ad0839f.mjs';
import '../_chunks/dep-5211a143.mjs';
import '../_chunks/dep-87669a0e.mjs';
import '../_chunks/dep-e155a416.mjs';
import '../hooks/useConfig.mjs';
import '../config-provider/useConfig.mjs';
import '../config-provider/context.mjs';
import '../_chunks/dep-2895d202.mjs';
import '../_chunks/dep-23a6b274.mjs';
import '../_chunks/dep-f9079916.mjs';
import '../_chunks/dep-c3b9ffc0.mjs';
import '../config-provider/type.mjs';
import '../utils/dom.mjs';
import '../utils/render-tnode.mjs';
import './props.mjs';
import '../hooks/useTeleport.mjs';

var INSTANCE_KEY = Symbol("TdLoading");
var createInstance = function createInstance(el, binding) {
  var _binding$modifiers = binding.modifiers,
    fullscreen = _binding$modifiers.fullscreen,
    inheritColor = _binding$modifiers.inheritColor;
  var options = {
    attach: function attach() {
      return el;
    },
    fullscreen: fullscreen !== null && fullscreen !== void 0 ? fullscreen : false,
    inheritColor: inheritColor !== null && inheritColor !== void 0 ? inheritColor : false,
    loading: binding.value
  };
  if (isObject(binding.value)) {
    mapKeys(binding.value, function (value, key) {
      options[key] = value;
    });
  }
  el[INSTANCE_KEY] = {
    options: options,
    instance: LoadingPlugin(options)
  };
};
var vLoading = {
  mounted: function mounted(el, binding) {
    if (binding.value) {
      createInstance(el, binding);
    }
  },
  updated: function updated(el, binding) {
    var instance = el[INSTANCE_KEY];
    var value = binding.value,
      oldValue = binding.oldValue;
    if (!isEqual(value, oldValue)) {
      var _value$loading;
      var loading = (_value$loading = value === null || value === void 0 ? void 0 : value.loading) !== null && _value$loading !== void 0 ? _value$loading : value;
      if (loading) {
        createInstance(el, binding);
      } else {
        instance === null || instance === void 0 || instance.instance.hide();
      }
    }
  },
  unmounted: function unmounted(el) {
    var _el$INSTANCE_KEY;
    (_el$INSTANCE_KEY = el[INSTANCE_KEY]) === null || _el$INSTANCE_KEY === void 0 || _el$INSTANCE_KEY.instance.hide();
  }
};

export { vLoading as default, vLoading };
//# sourceMappingURL=directive.mjs.map
