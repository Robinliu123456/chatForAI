/**
 * tdesign v1.11.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { defineComponent, computed, createVNode } from 'vue';
import { MirrorIcon, RotationIcon, ZoomOutIcon, ZoomInIcon, ImageIcon, DownloadIcon } from 'tdesign-icons-vue-next';
import TImageViewerIcon from './ImageModalIcon.mjs';
import { Tooltip } from '../../tooltip/index.mjs';
import { usePrefixClass } from '../../hooks/useConfig.mjs';
import { downloadFile } from '../utils.mjs';
import '../../hooks/index.mjs';
import { l as largeNumberToFixed } from '../../_chunks/dep-0ace3794.mjs';
import { useImagePreviewUrl } from '../../hooks/useImagePreviewUrl.mjs';
import { useConfig } from '../../config-provider/useConfig.mjs';
import '../../_chunks/dep-96b403e3.mjs';
import '../../_chunks/dep-7c8701fc.mjs';
import '../../hooks/tnode.mjs';
import 'lodash-es';
import '../../utils/render-tnode.mjs';
import '../../config-provider/context.mjs';
import '../../_chunks/dep-2895d202.mjs';
import '../../_chunks/dep-23a6b274.mjs';
import '../../_chunks/dep-f9079916.mjs';
import '../../_chunks/dep-c3b9ffc0.mjs';
import '../../config-provider/type.mjs';
import '../../tooltip/tooltip.mjs';
import '../../_chunks/dep-a3e567cf.mjs';
import '../../_chunks/dep-6ac84404.mjs';
import '../../tooltip/props.mjs';
import '../../popup/props.mjs';
import '../../popup/index.mjs';
import '../../popup/popup.mjs';
import '@popperjs/core';
import '../../hooks/useVModel.mjs';
import '../../utils/dom.mjs';
import '../../_chunks/dep-4ad0839f.mjs';
import '../../popup/container.mjs';
import '../../_chunks/dep-87669a0e.mjs';
import '../../hooks/useResizeObserver.mjs';
import '../../hooks/icon.mjs';
import '../../hooks/slot.mjs';
import '../../hooks/useCommonClassName.mjs';
import '../../hooks/useDefaultValue.mjs';
import '../../hooks/useDestroyOnClose.mjs';
import '../../hooks/useKeepAnimation.mjs';
import '../../hooks/useRipple.mjs';
import '../../hooks/useVirtualScroll.mjs';
import '../../_chunks/dep-53d9b6da.mjs';
import '../../_chunks/dep-30c62f61.mjs';
import '../../utils/withInstall.mjs';
import './style/css.mjs';
import '../../popup/type.mjs';
import '../../tooltip/utils/index.mjs';
import '../../tooltip/type.mjs';

var TImageViewerUtils = defineComponent({
  name: "TImageViewerUtils",
  props: {
    scale: Number,
    onRotate: Function,
    onZoomIn: Function,
    onZoomOut: Function,
    onMirror: Function,
    onReset: Function,
    currentImage: {
      type: Object,
      "default": function _default() {
        return {};
      }
    }
  },
  setup: function setup(props) {
    var classPrefix = usePrefixClass();
    var imageUrl = computed(function () {
      return props.currentImage.mainImage;
    });
    var _useImagePreviewUrl = useImagePreviewUrl(imageUrl),
      previewUrl = _useImagePreviewUrl.previewUrl;
    var _useConfig = useConfig("imageViewer"),
      globalConfig = _useConfig.globalConfig;
    return function () {
      return createVNode("div", {
        "class": "".concat(classPrefix.value, "-image-viewer__utils")
      }, [createVNode("div", {
        "class": "".concat(classPrefix.value, "-image-viewer__utils-content")
      }, [createVNode(Tooltip, {
        "overlayClassName": "".concat(classPrefix.value, "-image-viewer__utils--tip"),
        "content": globalConfig.value.mirrorTipText,
        "destroyOnClose": true,
        "placement": "top",
        "showArrow": true,
        "theme": "default"
      }, {
        "default": function _default() {
          return [createVNode(TImageViewerIcon, {
            "onClick": props.onMirror,
            "icon": function icon() {
              return createVNode(MirrorIcon, {
                "size": "medium"
              }, null);
            }
          }, null)];
        }
      }), createVNode(Tooltip, {
        "overlayClassName": "".concat(classPrefix.value, "-image-viewer__utils--tip"),
        "content": globalConfig.value.rotateTipText,
        "destroyOnClose": true,
        "placement": "top",
        "showArrow": true,
        "theme": "default"
      }, {
        "default": function _default() {
          return [createVNode(TImageViewerIcon, {
            "onClick": props.onRotate,
            "icon": function icon() {
              return createVNode(RotationIcon, {
                "size": "medium"
              }, null);
            }
          }, null)];
        }
      }), createVNode(TImageViewerIcon, {
        "icon": function icon() {
          return createVNode(ZoomOutIcon, {
            "size": "medium"
          }, null);
        },
        "onClick": props.onZoomOut
      }, null), createVNode(TImageViewerIcon, {
        "class": "".concat(classPrefix.value, "-image-viewer__utils-scale"),
        "size": "medium",
        "label": "".concat(largeNumberToFixed(String(props.scale * 100)), "%")
      }, null), createVNode(TImageViewerIcon, {
        "icon": function icon() {
          return createVNode(ZoomInIcon, {
            "size": "medium"
          }, null);
        },
        "onClick": props.onZoomIn
      }, null), createVNode(Tooltip, {
        "overlayClassName": "".concat(classPrefix.value, "-image-viewer__utils--tip"),
        "content": globalConfig.value.originalSizeTipText,
        "destroyOnClose": true,
        "placement": "top",
        "showArrow": true,
        "theme": "default"
      }, {
        "default": function _default() {
          return [createVNode("div", {
            "class": "".concat(classPrefix.value, "-image-viewer__modal-icon")
          }, [createVNode(TImageViewerIcon, {
            "icon": function icon() {
              return createVNode(ImageIcon, {
                "size": "medium"
              }, null);
            },
            "onClick": props.onReset
          }, null)])];
        }
      }), props.currentImage.download && createVNode(TImageViewerIcon, {
        "icon": function icon() {
          return createVNode(DownloadIcon, {
            "size": "medium"
          }, null);
        },
        "onClick": function onClick() {
          downloadFile(previewUrl.value);
        }
      }, null)])]);
    };
  }
});

export { TImageViewerUtils as default };
//# sourceMappingURL=ImageViewerUtils.mjs.map
